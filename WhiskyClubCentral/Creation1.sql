USE [master]
GO
/****** Object:  Database [WhiskyClubCentral]    Script Date: 6/16/2022 5:08:59 PM ******/
CREATE DATABASE [WhiskyClubCentral]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'WhiskyClubCentral', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\WhiskyClubCentral.mdf' , SIZE = 8192KB , MAXSIZE = UNLIMITED, FILEGROWTH = 65536KB )
 LOG ON 
( NAME = N'WhiskyClubCentral_log', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\WhiskyClubCentral_log.ldf' , SIZE = 8192KB , MAXSIZE = 2048GB , FILEGROWTH = 65536KB )
 WITH CATALOG_COLLATION = DATABASE_DEFAULT
GO
ALTER DATABASE [WhiskyClubCentral] SET COMPATIBILITY_LEVEL = 150
GO
IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC [WhiskyClubCentral].[dbo].[sp_fulltext_database] @action = 'enable'
end
GO
ALTER DATABASE [WhiskyClubCentral] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE [WhiskyClubCentral] SET ANSI_NULLS OFF 
GO
ALTER DATABASE [WhiskyClubCentral] SET ANSI_PADDING OFF 
GO
ALTER DATABASE [WhiskyClubCentral] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE [WhiskyClubCentral] SET ARITHABORT OFF 
GO
ALTER DATABASE [WhiskyClubCentral] SET AUTO_CLOSE OFF 
GO
ALTER DATABASE [WhiskyClubCentral] SET AUTO_SHRINK OFF 
GO
ALTER DATABASE [WhiskyClubCentral] SET AUTO_UPDATE_STATISTICS ON 
GO
ALTER DATABASE [WhiskyClubCentral] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABASE [WhiskyClubCentral] SET CURSOR_DEFAULT  GLOBAL 
GO
ALTER DATABASE [WhiskyClubCentral] SET CONCAT_NULL_YIELDS_NULL OFF 
GO
ALTER DATABASE [WhiskyClubCentral] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE [WhiskyClubCentral] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE [WhiskyClubCentral] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE [WhiskyClubCentral] SET  DISABLE_BROKER 
GO
ALTER DATABASE [WhiskyClubCentral] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO
ALTER DATABASE [WhiskyClubCentral] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE [WhiskyClubCentral] SET TRUSTWORTHY OFF 
GO
ALTER DATABASE [WhiskyClubCentral] SET ALLOW_SNAPSHOT_ISOLATION OFF 
GO
ALTER DATABASE [WhiskyClubCentral] SET PARAMETERIZATION SIMPLE 
GO
ALTER DATABASE [WhiskyClubCentral] SET READ_COMMITTED_SNAPSHOT OFF 
GO
ALTER DATABASE [WhiskyClubCentral] SET HONOR_BROKER_PRIORITY OFF 
GO
ALTER DATABASE [WhiskyClubCentral] SET RECOVERY FULL 
GO
ALTER DATABASE [WhiskyClubCentral] SET  MULTI_USER 
GO
ALTER DATABASE [WhiskyClubCentral] SET PAGE_VERIFY CHECKSUM  
GO
ALTER DATABASE [WhiskyClubCentral] SET DB_CHAINING OFF 
GO
ALTER DATABASE [WhiskyClubCentral] SET FILESTREAM( NON_TRANSACTED_ACCESS = OFF ) 
GO
ALTER DATABASE [WhiskyClubCentral] SET TARGET_RECOVERY_TIME = 60 SECONDS 
GO
ALTER DATABASE [WhiskyClubCentral] SET DELAYED_DURABILITY = DISABLED 
GO
ALTER DATABASE [WhiskyClubCentral] SET ACCELERATED_DATABASE_RECOVERY = OFF  
GO
EXEC sys.sp_db_vardecimal_storage_format N'WhiskyClubCentral', N'ON'
GO
ALTER DATABASE [WhiskyClubCentral] SET QUERY_STORE = OFF
GO
USE [WhiskyClubCentral]
GO
/****** Object:  Table [dbo].[CatalogContainer]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CatalogContainer](
	[id_Container] [int] IDENTITY(1,1) NOT NULL,
	[description_Container] [varchar](64) NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[id_Container] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CatalogCountry]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CatalogCountry](
	[id_Country] [int] IDENTITY(1,1) NOT NULL,
	[name_Country] [varchar](64) NOT NULL,
	[money_type] [varchar](64) NOT NULL,
	[dollar_equivalent] [float] NOT NULL,
 CONSTRAINT [PK__CatalogC__DCFD765CD0D14B46] PRIMARY KEY CLUSTERED 
(
	[id_Country] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CatalogDistillery]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CatalogDistillery](
	[id_Distillery] [int] IDENTITY(1,1) NOT NULL,
	[name_Distillery] [varchar](64) NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[id_Distillery] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CatalogProductType]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CatalogProductType](
	[id_ProductType] [int] IDENTITY(1,1) NOT NULL,
	[name_ProductType] [varchar](64) NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[id_ProductType] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CatalogStatusPurchase]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CatalogStatusPurchase](
	[id_StatusPurchase] [int] NOT NULL,
	[name_StatusPurchase] [varchar](64) NOT NULL,
 CONSTRAINT [PK__CatalogS__4259C51E2967F82B] PRIMARY KEY CLUSTERED 
(
	[id_StatusPurchase] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CatalogSubscription]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CatalogSubscription](
	[id_subscription] [int] NOT NULL,
	[name_subscription] [varchar](64) NOT NULL,
	[description_subscription] [varchar](max) NOT NULL,
	[discount_subscription] [int] NOT NULL,
	[price_subscription] [money] NOT NULL,
	[discount_shipping] [int] NOT NULL,
 CONSTRAINT [PK__CatalogS__F9DF0F6D89C35136] PRIMARY KEY CLUSTERED 
(
	[id_subscription] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CatalogUserType]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CatalogUserType](
	[id_UserType] [int] IDENTITY(1,1) NOT NULL,
	[name_UserType] [varchar](64) NOT NULL,
	[description_UserType] [varchar](64) NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[id_UserType] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Client]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Client](
	[id_client] [int] NOT NULL,
	[name_client] [varchar](50) NOT NULL,
	[country_client] [int] NOT NULL,
	[email_client] [varchar](64) NOT NULL,
	[subscription_client] [int] NOT NULL,
	[user_credentials] [int] NOT NULL,
	[location_client] [geography] NULL,
	[location_clientText]  AS ([location_client].[STAsText]()),
	[status_client] [bit] NOT NULL,
 CONSTRAINT [PK__Client__6EC2B6C02E812F81] PRIMARY KEY CLUSTERED 
(
	[id_client] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[imagesProduct]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[imagesProduct](
	[id_image] [int] IDENTITY(1,1) NOT NULL,
	[product_image] [int] NOT NULL,
	[image_] [varbinary](max) NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[id_image] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[LocationXClient]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[LocationXClient](
	[id_locationXClient] [int] IDENTITY(1,1) NOT NULL,
	[id_client] [varchar](50) NOT NULL,
	[location_client] [geography] NOT NULL,
	[location_clientText]  AS ([location_client].[STAsText]()),
	[name_location] [varchar](128) NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[id_locationXClient] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[locationXCliente]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[locationXCliente](
	[id_locationXCliente] [int] IDENTITY(1,1) NOT NULL,
	[id_Client] [int] NOT NULL,
	[name_Location] [varchar](128) NULL,
	[location_client] [geography] NOT NULL,
	[location_clientText]  AS ([location_client].[STAsText]()),
PRIMARY KEY CLUSTERED 
(
	[id_locationXCliente] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Product]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Product](
	[id_product] [int] IDENTITY(1,1) NOT NULL,
	[name_product] [varchar](64) NOT NULL,
	[type_product] [int] NOT NULL,
	[aged_product] [int] NOT NULL,
	[distillery_product] [int] NOT NULL,
	[container_product] [int] NOT NULL,
	[price_product] [money] NOT NULL,
	[special_product] [bit] NOT NULL,
	[status] [bit] NULL,
	[amount] [int] NOT NULL,
	[image] [varbinary](max) NULL,
 CONSTRAINT [PK__Product__BA39E84F14DE09CA] PRIMARY KEY CLUSTERED 
(
	[id_product] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[purchase]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[purchase](
	[id_purchase] [int] IDENTITY(1,1) NOT NULL,
	[client_purchase] [int] NOT NULL,
	[date_purchase] [date] NOT NULL,
	[location_client] [geography] NOT NULL,
	[subtotal] [money] NOT NULL,
	[shipping] [money] NOT NULL,
	[total] [money] NOT NULL,
	[id_PurchasingManager] [int] NULL,
	[id_Dealer] [int] NULL,
	[status_purchase] [int] NOT NULL,
	[distance] [float] NOT NULL,
	[moneyType] [varchar](128) NOT NULL,
	[store] [int] NOT NULL,
 CONSTRAINT [PK__purchase__84A464F9AB33EC9D] PRIMARY KEY CLUSTERED 
(
	[id_purchase] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[purchaseXProduct]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[purchaseXProduct](
	[id_purchaseXProduct] [int] IDENTITY(1,1) NOT NULL,
	[id_purchase] [int] NOT NULL,
	[id_product] [int] NOT NULL,
	[amount] [int] NOT NULL,
	[subtotal] [money] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[id_purchaseXProduct] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Store]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Store](
	[id_store] [int] NOT NULL,
	[name_store] [varchar](64) NOT NULL,
	[country_store] [int] NOT NULL,
	[location_store] [geography] NOT NULL,
	[location_storeText]  AS ([location_store].[STAsText]()),
 CONSTRAINT [PK__Store__3A39C33947B6B43A] PRIMARY KEY CLUSTERED 
(
	[id_store] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Users]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Users](
	[id_user] [int] IDENTITY(1,1) NOT NULL,
	[nickname] [varchar](50) NOT NULL,
	[password_user] [varbinary](max) NOT NULL,
	[type_user] [int] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[id_user] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
SET IDENTITY_INSERT [dbo].[CatalogContainer] ON 
GO
INSERT [dbo].[CatalogContainer] ([id_Container], [description_Container]) VALUES (1, N'Mini Bottle 4cl')
GO
INSERT [dbo].[CatalogContainer] ([id_Container], [description_Container]) VALUES (2, N'Hip flask Bottle 200ml')
GO
INSERT [dbo].[CatalogContainer] ([id_Container], [description_Container]) VALUES (3, N'Standar Bottle 50cl')
GO
INSERT [dbo].[CatalogContainer] ([id_Container], [description_Container]) VALUES (4, N'Bottle 70cl-1L')
GO
INSERT [dbo].[CatalogContainer] ([id_Container], [description_Container]) VALUES (5, N'Special Size Bottle 3L')
GO
INSERT [dbo].[CatalogContainer] ([id_Container], [description_Container]) VALUES (6, N'Gift Edition Bottle 4.5L ')
GO
SET IDENTITY_INSERT [dbo].[CatalogContainer] OFF
GO
SET IDENTITY_INSERT [dbo].[CatalogCountry] ON 
GO
INSERT [dbo].[CatalogCountry] ([id_Country], [name_Country], [money_type], [dollar_equivalent]) VALUES (1, N'Germany', N'Euro', 0.94)
GO
INSERT [dbo].[CatalogCountry] ([id_Country], [name_Country], [money_type], [dollar_equivalent]) VALUES (2, N'United States', N'Dollar', 1)
GO
INSERT [dbo].[CatalogCountry] ([id_Country], [name_Country], [money_type], [dollar_equivalent]) VALUES (3, N'Japan', N'Yen', 134.36)
GO
SET IDENTITY_INSERT [dbo].[CatalogCountry] OFF
GO
SET IDENTITY_INSERT [dbo].[CatalogDistillery] ON 
GO
INSERT [dbo].[CatalogDistillery] ([id_Distillery], [name_Distillery]) VALUES (1, N'Glenmorangie Distillery')
GO
INSERT [dbo].[CatalogDistillery] ([id_Distillery], [name_Distillery]) VALUES (2, N'Balblair Distillery')
GO
INSERT [dbo].[CatalogDistillery] ([id_Distillery], [name_Distillery]) VALUES (3, N'Ardbeg Distillery')
GO
INSERT [dbo].[CatalogDistillery] ([id_Distillery], [name_Distillery]) VALUES (4, N'Aberlour Destillery')
GO
SET IDENTITY_INSERT [dbo].[CatalogDistillery] OFF
GO
SET IDENTITY_INSERT [dbo].[CatalogProductType] ON 
GO
INSERT [dbo].[CatalogProductType] ([id_ProductType], [name_ProductType]) VALUES (1, N'Single Malt')
GO
INSERT [dbo].[CatalogProductType] ([id_ProductType], [name_ProductType]) VALUES (2, N'Blended Scotch')
GO
INSERT [dbo].[CatalogProductType] ([id_ProductType], [name_ProductType]) VALUES (3, N'Irish')
GO
INSERT [dbo].[CatalogProductType] ([id_ProductType], [name_ProductType]) VALUES (4, N'Blended Malt')
GO
INSERT [dbo].[CatalogProductType] ([id_ProductType], [name_ProductType]) VALUES (5, N'Bourbon')
GO
INSERT [dbo].[CatalogProductType] ([id_ProductType], [name_ProductType]) VALUES (6, N'Tennessee Whiskey')
GO
SET IDENTITY_INSERT [dbo].[CatalogProductType] OFF
GO
INSERT [dbo].[CatalogStatusPurchase] ([id_StatusPurchase], [name_StatusPurchase]) VALUES (1, N'Pending')
GO
INSERT [dbo].[CatalogStatusPurchase] ([id_StatusPurchase], [name_StatusPurchase]) VALUES (2, N'Processed')
GO
INSERT [dbo].[CatalogStatusPurchase] ([id_StatusPurchase], [name_StatusPurchase]) VALUES (3, N'Canceled')
GO
INSERT [dbo].[CatalogSubscription] ([id_subscription], [name_subscription], [description_subscription], [discount_subscription], [price_subscription], [discount_shipping]) VALUES (1, N'Default', N'Default', 0, 0.0000, 0)
GO
INSERT [dbo].[CatalogSubscription] ([id_subscription], [name_subscription], [description_subscription], [discount_subscription], [price_subscription], [discount_shipping]) VALUES (2, N'Tier Short Glass', N'When a new whiskey is entered into the store, you receive an email with its description. You have a 5% discount on purchases', 5, 30.0000, 0)
GO
INSERT [dbo].[CatalogSubscription] ([id_subscription], [name_subscription], [description_subscription], [discount_subscription], [price_subscription], [discount_shipping]) VALUES (3, N'Tier Gleincairn', N'Exclusive whiskeys. It has a 10% discount on purchases and a 20% discount on the cost of shipping. Notifications of new products to the mail.', 10, 70.0000, 20)
GO
INSERT [dbo].[CatalogSubscription] ([id_subscription], [name_subscription], [description_subscription], [discount_subscription], [price_subscription], [discount_shipping]) VALUES (4, N'Tier Master Distiller', N'Free shipping cost. You have a 30% discount on purchases and every 10 whiskeys you buy, you get a free whiskey. Access to the catalog of special whiskeys. Mail notification of new products.', 30, 100.0000, 100)
GO
SET IDENTITY_INSERT [dbo].[CatalogUserType] ON 
GO
INSERT [dbo].[CatalogUserType] ([id_UserType], [name_UserType], [description_UserType]) VALUES (1, N'Client User', N'Normal user for shopping')
GO
INSERT [dbo].[CatalogUserType] ([id_UserType], [name_UserType], [description_UserType]) VALUES (2, N'Especial User', N'Especial user with editing permissions')
GO
SET IDENTITY_INSERT [dbo].[CatalogUserType] OFF
GO
INSERT [dbo].[Client] ([id_client], [name_client], [country_client], [email_client], [subscription_client], [user_credentials], [location_client], [status_client]) VALUES (1, N'Andres Valverde', 1, N'andres190601@gmail.com', 4, 1, 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 1)
GO
INSERT [dbo].[Client] ([id_client], [name_client], [country_client], [email_client], [subscription_client], [user_credentials], [location_client], [status_client]) VALUES (2, N'Luis Fallas', 2, N'lfpf2220@gmail.com', 2, 2, 0xE6100000010CDE463DF3A0D44240CAE0A9ACBE5458C0, 1)
GO
INSERT [dbo].[Client] ([id_client], [name_client], [country_client], [email_client], [subscription_client], [user_credentials], [location_client], [status_client]) VALUES (3, N'Shirley Rodriguez', 3, N'shirod777@gmail.com', 3, 3, 0xE6100000010C9E800A9933D74140F076FF9870786140, 1)
GO
INSERT [dbo].[Client] ([id_client], [name_client], [country_client], [email_client], [subscription_client], [user_credentials], [location_client], [status_client]) VALUES (4, N'Juanita Perez', 2, N'juanita@gmail.com', 1, 4, 0xE6100000010C119569C8342A424062C5C9E74CE95DC0, 1)
GO
INSERT [dbo].[Client] ([id_client], [name_client], [country_client], [email_client], [subscription_client], [user_credentials], [location_client], [status_client]) VALUES (5, N'Valeria', 2, N'valeria@gmail.com', 4, 6, NULL, 1)
GO
INSERT [dbo].[Client] ([id_client], [name_client], [country_client], [email_client], [subscription_client], [user_credentials], [location_client], [status_client]) VALUES (6, N'Sys Admin', 1, N'sysadmin@gmail.com', 1, 7, NULL, 1)
GO
SET IDENTITY_INSERT [dbo].[LocationXClient] ON 
GO
INSERT [dbo].[LocationXClient] ([id_locationXClient], [id_client], [location_client], [name_location]) VALUES (1, N'1', 0xE6100000010CB84802564C174A400000000000294340, N'name')
GO
INSERT [dbo].[LocationXClient] ([id_locationXClient], [id_client], [location_client], [name_location]) VALUES (2, N'1', 0xE6100000010CB84802564C174A400000000000294340, N'prueba')
GO
SET IDENTITY_INSERT [dbo].[LocationXClient] OFF
GO
SET IDENTITY_INSERT [dbo].[Product] ON 
GO
INSERT [dbo].[Product] ([id_product], [name_product], [type_product], [aged_product], [distillery_product], [container_product], [price_product], [special_product], [status], [amount], [image]) VALUES (1, N'Glenfiddich', 1, 15, 1, 3, 45.0000, 0, 1, 42, NULL)
GO
INSERT [dbo].[Product] ([id_product], [name_product], [type_product], [aged_product], [distillery_product], [container_product], [price_product], [special_product], [status], [amount], [image]) VALUES (2, N'Glenlivet Founder’s Reserve', 1, 20, 2, 3, 38.0000, 0, 1, 34, NULL)
GO
INSERT [dbo].[Product] ([id_product], [name_product], [type_product], [aged_product], [distillery_product], [container_product], [price_product], [special_product], [status], [amount], [image]) VALUES (3, N'Monkey Shoulder', 2, 3, 3, 1, 10.0000, 0, 1, 40, NULL)
GO
INSERT [dbo].[Product] ([id_product], [name_product], [type_product], [aged_product], [distillery_product], [container_product], [price_product], [special_product], [status], [amount], [image]) VALUES (4, N'Lambay Small Batch Blend', 3, 10, 4, 2, 25.0000, 0, 1, 39, NULL)
GO
INSERT [dbo].[Product] ([id_product], [name_product], [type_product], [aged_product], [distillery_product], [container_product], [price_product], [special_product], [status], [amount], [image]) VALUES (5, N'Johnnie Walker Black Label', 4, 12, 4, 4, 55.0000, 0, 1, 41, NULL)
GO
INSERT [dbo].[Product] ([id_product], [name_product], [type_product], [aged_product], [distillery_product], [container_product], [price_product], [special_product], [status], [amount], [image]) VALUES (6, N'Makers Mark at Drizly', 5, 20, 1, 5, 150.0000, 1, 1, 45, NULL)
GO
INSERT [dbo].[Product] ([id_product], [name_product], [type_product], [aged_product], [distillery_product], [container_product], [price_product], [special_product], [status], [amount], [image]) VALUES (7, N'George Dickel Barrel Select', 6, 12, 1, 6, 70.0000, 1, 1, 50, NULL)
GO
INSERT [dbo].[Product] ([id_product], [name_product], [type_product], [aged_product], [distillery_product], [container_product], [price_product], [special_product], [status], [amount], [image]) VALUES (8, N'PruebaImageb', 1, 1, 1, 1, 1.0000, 1, 1, 1, 0x
GO
INSERT [dbo].[Product] ([id_product], [name_product], [type_product], [aged_product], [distillery_product], [container_product], [price_product], [special_product], [status], [amount], [image]) VALUES (9, N'Prueba1', 2, 15, 2, 4, 10.0000, 1, 1, 0, 0x
GO
INSERT [dbo].[Product] ([id_product], [name_product], [type_product], [aged_product], [distillery_product], [container_product], [price_product], [special_product], [status], [amount], [image]) VALUES (10, N'Prueba2', 2, 20, 2, 1, 20.0000, 1, 1, 2, 
GO
SET IDENTITY_INSERT [dbo].[Product] OFF
GO
SET IDENTITY_INSERT [dbo].[purchase] ON 
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (1, 1, CAST(N'2022-06-15' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 0.0000, 6798.5198, 6798.5198, NULL, NULL, 1, 360623.39638885122, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (2, 1, CAST(N'2022-06-15' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 0.0000, 6798.5198, 6798.5198, NULL, NULL, 1, 360623.39638885122, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (3, 1, CAST(N'2022-06-15' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 0.0000, 6798.5198, 6798.5198, NULL, NULL, 1, 360623.39638885122, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (4, 1, CAST(N'2022-06-15' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 0.0000, 6798.5198, 6798.5198, NULL, NULL, 1, 360623.39638885122, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (5, 1, CAST(N'2022-06-15' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 0.0000, 6798.5198, 6798.5198, NULL, NULL, 1, 360623.39638885122, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (6, 1, CAST(N'2022-06-15' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 0.0000, 6798.5198, 6798.5198, NULL, NULL, 1, 360623.39638885122, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (7, 1, CAST(N'2022-06-15' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 0.0000, 6798.5198, 6798.5198, NULL, NULL, 1, 360623.39638885122, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (8, 1, CAST(N'2022-06-15' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 0.0000, 6798.5198, 6798.5198, NULL, NULL, 1, 360623.39638885122, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (9, 2, CAST(N'2022-06-15' AS Date), 0xE6100000010CDE463DF3A0D44240CAE0A9ACBE5458C0, 0.0000, 157843.5455, 157843.5455, NULL, NULL, 1, 7891177.2737296019, N'Dollar', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (10, 1, CAST(N'2022-06-15' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 129.7200, 7204.1415, 7333.8615, NULL, NULL, 1, 382199.01274198125, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (11, 1, CAST(N'2022-06-15' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 35.7200, 193.7335, 229.4535, NULL, NULL, 1, 382.19901274198122, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (12, 1, CAST(N'2022-06-15' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 35.7200, 193.7335, 229.4535, NULL, NULL, 1, 382.19901274198122, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (13, 1, CAST(N'2022-06-15' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 35.7200, 193.7335, 229.4535, NULL, NULL, 1, 382.19901274198122, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (14, 1, CAST(N'2022-06-15' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 32.9000, 183.5930, 216.4930, NULL, NULL, 1, 360.62339638885123, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (15, 1, CAST(N'2022-06-15' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 68.6200, 183.5930, 252.2130, NULL, NULL, 1, 360.62339638885123, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (18, 1, CAST(N'2022-06-15' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 45.1200, 193.7335, 238.8535, NULL, NULL, 1, 382.19901274198122, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (19, 1, CAST(N'2022-06-15' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 192.7000, 183.5930, 376.2930, NULL, NULL, 1, 360.62339638885123, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (20, 1, CAST(N'2022-06-15' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 65.8000, 193.7335, 259.5335, NULL, NULL, 1, 382.19901274198122, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (21, 1, CAST(N'2022-06-15' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 113.7400, 183.5930, 297.3330, NULL, NULL, 1, 360.62339638885123, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (22, 1, CAST(N'2022-06-15' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 35.7200, 183.5930, 219.3130, NULL, NULL, 1, 360.62339638885123, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (24, 1, CAST(N'2022-06-16' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 23.5000, 0.0000, 23.5000, NULL, NULL, 1, 360.62339638885123, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (25, 1, CAST(N'2022-06-16' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 23.5000, 0.0000, 23.5000, NULL, NULL, 1, 360.62339638885123, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (26, 1, CAST(N'2022-06-16' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 9.4000, 0.0000, 9.4000, NULL, NULL, 1, 9089.03348527723, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (27, 1, CAST(N'2022-06-16' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 9.4000, 0.0000, 9.4000, NULL, NULL, 1, 9081.5929493228869, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (28, 1, CAST(N'2022-06-16' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 51.7000, 0.0000, 51.7000, NULL, NULL, 1, 360.62339638885123, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (29, 1, CAST(N'2022-06-16' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 35.7200, 0.0000, 35.7200, NULL, NULL, 1, 360.62339638885123, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (30, 1, CAST(N'2022-06-16' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 42.3000, 0.0000, 42.3000, NULL, NULL, 1, 360.62339638885123, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (31, 1, CAST(N'2022-06-16' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 9.4000, 0.0000, 9.4000, NULL, NULL, 1, 360.62339638885123, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (32, 1, CAST(N'2022-06-16' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 42.3000, 0.0000, 42.3000, NULL, NULL, 1, 360.62339638885123, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (33, 1, CAST(N'2022-06-16' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 35.7200, 0.0000, 35.7200, NULL, NULL, 1, 360.62339638885123, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (34, 1, CAST(N'2022-06-16' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 42.3000, 0.0000, 42.3000, NULL, NULL, 1, 360.62339638885123, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (35, 1, CAST(N'2022-06-16' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 23.5000, 0.0000, 23.5000, NULL, NULL, 1, 360.62339638885123, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (36, 1, CAST(N'2022-06-16' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 186.1200, 0.0000, 186.1200, NULL, NULL, 1, 360.62339638885123, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (37, 1, CAST(N'2022-06-16' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 84.6000, 0.0000, 84.6000, NULL, NULL, 1, 360.62339638885123, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (38, 1, CAST(N'2022-06-16' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 96.8200, 0.0000, 96.8200, NULL, NULL, 1, 360.62339638885123, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (39, 1, CAST(N'2022-06-16' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 75.2000, 0.0000, 75.2000, NULL, NULL, 1, 360.62339638885123, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (40, 1, CAST(N'2022-06-16' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 68.6200, 0.0000, 68.6200, NULL, NULL, 1, 360.62339638885123, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (41, 1, CAST(N'2022-06-16' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 0.0000, 0.0000, 0.0000, NULL, NULL, 1, 360.62339638885123, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (42, 1, CAST(N'2022-06-16' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 0.0000, 0.0000, 0.0000, NULL, NULL, 1, 360.62339638885123, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (43, 1, CAST(N'2022-06-16' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 113.7400, 0.0000, 113.7400, NULL, NULL, 1, 290.37460692296781, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (44, 1, CAST(N'2022-06-16' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 78.0200, 0.0000, 78.0200, NULL, NULL, 1, 360.62339638885123, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (45, 1, CAST(N'2022-06-16' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 0.0000, 0.0000, 0.0000, NULL, NULL, 3, 360.62339638885123, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (46, 1, CAST(N'2022-06-16' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 141.0000, 0.0000, 141.0000, NULL, NULL, 1, 360.62339638885123, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (47, 1, CAST(N'2022-06-16' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 141.0000, 0.0000, 141.0000, NULL, NULL, 1, 360.62339638885123, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (48, 1, CAST(N'2022-06-16' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 0.0000, 0.0000, 0.0000, NULL, NULL, 3, 360.62339638885123, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (49, 1, CAST(N'2022-06-16' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 9.4000, 0.0000, 9.4000, NULL, NULL, 1, 9089.3439071213052, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (50, 1, CAST(N'2022-06-16' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 75.2000, 0.0000, 75.2000, NULL, NULL, 1, 360.62339638885123, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (51, 1, CAST(N'2022-06-16' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 45.1200, 0.0000, 45.1200, NULL, NULL, 1, 360.62339638885123, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (52, 1, CAST(N'2022-06-16' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 347.8000, 0.0000, 347.8000, NULL, NULL, 1, 382.19901274198122, N'Euro', 1)
GO
INSERT [dbo].[purchase] ([id_purchase], [client_purchase], [date_purchase], [location_client], [subtotal], [shipping], [total], [id_PurchasingManager], [id_Dealer], [status_purchase], [distance], [moneyType], [store]) VALUES (53, 1, CAST(N'2022-06-16' AS Date), 0xE6100000010C4971191727AB4940EC8B62EE50C02840, 23.5000, 0.0000, 23.5000, NULL, NULL, 1, 382.19901274198122, N'Euro', 3)
GO
SET IDENTITY_INSERT [dbo].[purchase] OFF
GO
SET IDENTITY_INSERT [dbo].[purchaseXProduct] ON 
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (1, 1, 4, 2, 47.0000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (2, 1, 4, 2, 47.0000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (3, 1, 4, 2, 47.0000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (4, 1, 4, 2, 47.0000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (5, 1, 4, 2, 47.0000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (6, 1, 4, 2, 47.0000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (7, 1, 4, 2, 47.0000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (8, 1, 4, 2, 47.0000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (9, 1, 4, 2, 47.0000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (10, 1, 4, 2, 47.0000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (11, 5, 6, 1, 141.0000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (12, 8, 6, 1, 141.0000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (13, 9, 1, 1, 45.0000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (14, 9, 2, 1, 38.0000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (15, 10, 3, 10, 94.0000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (16, 10, 2, 1, 35.7200)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (17, 11, 2, 1, 35.7200)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (18, 12, 2, 1, 35.7200)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (19, 13, 2, 1, 35.7200)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (20, 14, 3, 1, 9.4000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (21, 14, 4, 1, 23.5000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (22, 15, 2, 1, 35.7200)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (23, 15, 3, 1, 9.4000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (24, 15, 4, 1, 23.5000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (25, 18, 2, 1, 35.7200)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (26, 18, 3, 1, 9.4000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (27, 19, 5, 1, 51.7000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (28, 19, 6, 1, 141.0000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (29, 20, 4, 1, 23.5000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (30, 20, 1, 1, 42.3000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (31, 21, 1, 1, 42.3000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (32, 21, 2, 2, 71.4400)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (33, 22, 2, 1, 35.7200)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (34, 24, 4, 1, 23.5000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (35, 25, 4, 1, 23.5000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (36, 26, 9, 1, 9.4000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (37, 27, 9, 1, 9.4000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (38, 28, 5, 1, 51.7000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (39, 29, 2, 1, 35.7200)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (40, 30, 1, 1, 42.3000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (41, 31, 3, 1, 9.4000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (42, 32, 1, 1, 42.3000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (43, 33, 2, 1, 35.7200)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (44, 34, 1, 1, 42.3000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (45, 35, 4, 1, 23.5000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (46, 36, 2, 1, 35.7200)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (47, 36, 3, 1, 9.4000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (48, 36, 6, 1, 141.0000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (49, 37, 3, 1, 9.4000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (50, 37, 4, 1, 23.5000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (51, 37, 5, 1, 51.7000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (52, 38, 1, 1, 42.3000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (53, 38, 2, 1, 35.7200)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (54, 38, 3, 2, 18.8000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (55, 39, 4, 1, 23.5000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (56, 39, 5, 1, 51.7000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (57, 40, 2, 1, 35.7200)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (58, 40, 4, 1, 23.5000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (59, 40, 3, 1, 9.4000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (60, 43, 1, 1, 42.3000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (61, 43, 2, 2, 71.4400)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (62, 44, 1, 1, 42.3000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (63, 44, 2, 1, 35.7200)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (64, 46, 6, 1, 141.0000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (65, 47, 6, 1, 141.0000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (66, 49, 9, 1, 9.4000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (67, 50, 4, 1, 23.5000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (68, 50, 5, 1, 51.7000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (69, 51, 2, 1, 35.7200)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (70, 51, 3, 1, 9.4000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (71, 52, 6, 1, 141.0000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (72, 52, 5, 4, 206.8000)
GO
INSERT [dbo].[purchaseXProduct] ([id_purchaseXProduct], [id_purchase], [id_product], [amount], [subtotal]) VALUES (73, 53, 4, 1, 23.5000)
GO
SET IDENTITY_INSERT [dbo].[purchaseXProduct] OFF
GO
INSERT [dbo].[Store] ([id_store], [name_store], [country_store], [location_store]) VALUES (1, N'WhiskyClub Germany 1', 1, 0xE6100000010C6167836B7B11484032FA46193D262740)
GO
INSERT [dbo].[Store] ([id_store], [name_store], [country_store], [location_store]) VALUES (2, N'WhiskyClub Germany 2', 1, 0xE6100000010C0E65378F6E144940D472074DED672140)
GO
INSERT [dbo].[Store] ([id_store], [name_store], [country_store], [location_store]) VALUES (3, N'WhiskyClub Germany 3', 1, 0xE6100000010C744CD9079A794940BA93B5375FCA1B40)
GO
INSERT [dbo].[Store] ([id_store], [name_store], [country_store], [location_store]) VALUES (4, N'WhiskyClub Japan 1', 3, 0xE6100000010CA7E4B3FDF2D54140AE60160B70786140)
GO
INSERT [dbo].[Store] ([id_store], [name_store], [country_store], [location_store]) VALUES (5, N'WhiskyClub Japan 2', 3, 0xE6100000010CCB323EE063DC414026BBDF2999766140)
GO
INSERT [dbo].[Store] ([id_store], [name_store], [country_store], [location_store]) VALUES (6, N'WhiskyClub Japan 3', 3, 0xE6100000010C642141698FD54140A129D96D73786140)
GO
INSERT [dbo].[Store] ([id_store], [name_store], [country_store], [location_store]) VALUES (7, N'WhiskyClub USA 1', 2, 0xE6100000010CAD85B4731EE542403E50ADFB029A5EC0)
GO
INSERT [dbo].[Store] ([id_store], [name_store], [country_store], [location_store]) VALUES (8, N'WhiskyClub USA 2', 2, 0xE6100000010CE2FED4AF626140409F1A3DA1EA485DC0)
GO
INSERT [dbo].[Store] ([id_store], [name_store], [country_store], [location_store]) VALUES (9, N'WhiskyClub USA 3', 2, 0xE6100000010C4D0D51BB2D5D4440AB612D8E897F52C0)
GO
SET IDENTITY_INSERT [dbo].[Users] ON 
GO
INSERT [dbo].[Users] ([id_user], [nickname], [password_user], [type_user]) VALUES (1, N'andres123', 0x020074348C3E5C37880AC09AD34E299FC86770BC144B253FEC25FB581E29D86BB895CC2EC75D208E29446CFD60CBFCE881ED0A44B8238C12138B3B7D449149C990ACDA164636, 1)
GO
INSERT [dbo].[Users] ([id_user], [nickname], [password_user], [type_user]) VALUES (2, N'luis123', 0x0200996FCA024109660DA60ECC793BFEA744C2A7D1C38BCC2BBB763EB865306ED4AFCA81B2D95770D0D22F243E32E9FDD0A9C23EA6E106C8F32B019C55EDD6ACB9516B3FB878, 1)
GO
INSERT [dbo].[Users] ([id_user], [nickname], [password_user], [type_user]) VALUES (3, N'shirley123', 0x020018FFA35F3114C45422B5240A221128DD261EF8DDAC8A3513C72D3A31453F8B1484ADAAC5A8117F11274A5C0CA77A66CB6EB13A1FC37F83077E033B5DF237EEB42A1F45B0, 1)
GO
INSERT [dbo].[Users] ([id_user], [nickname], [password_user], [type_user]) VALUES (4, N'juanita123', 0x02004FF404A9F684F33C7CDED5A426A39B973A8663CD621AF20A7059414AE42207C2E15F90038DDAE1DC19B1A94624D8C722BCDF3CBFDB794096AF87CBE3361B517F51AA2326, 1)
GO
INSERT [dbo].[Users] ([id_user], [nickname], [password_user], [type_user]) VALUES (5, N'PRUEBA', 0x0200C5205BFA986DC9C9646B2F68EF8E5340B31FF007C984EEF13981320292191B2651F9828C9F89406EC736CA93B6C3B21E7D7D99707FF3AC24C3BA266F5BF71D3853597FEB, 1)
GO
INSERT [dbo].[Users] ([id_user], [nickname], [password_user], [type_user]) VALUES (6, N'valeUser', 0x02001D4C00CF80562FD5010F4E2E0DEF1F9FC7AB26CF469D1C9332CF4827DE88DBC0777897D97F51D777DA185988A7A4497F41152D24F9125F7F59EDD9005160666FFDC91B18, 1)
GO
INSERT [dbo].[Users] ([id_user], [nickname], [password_user], [type_user]) VALUES (7, N'sysadmin', 0x0200974E88C1E808FF3C903DDDA7F7AEA723B42184D01A5ABDF84F6B825020F10F14DC0E3A87E5283C1DD4CC4DCD0F1AE41F09A45CD3F4D43B9F558A55E80E1CC1ABA538FC7E, 2)
GO
SET IDENTITY_INSERT [dbo].[Users] OFF
GO
ALTER TABLE [dbo].[Client] ADD  CONSTRAINT [DF_Client_subscription_client]  DEFAULT ((1)) FOR [subscription_client]
GO
ALTER TABLE [dbo].[Client] ADD  CONSTRAINT [DF_Client_status_client]  DEFAULT ((1)) FOR [status_client]
GO
ALTER TABLE [dbo].[LocationXClient] ADD  CONSTRAINT [DF_LocationXClient_name_location]  DEFAULT ('name') FOR [name_location]
GO
ALTER TABLE [dbo].[Product] ADD  CONSTRAINT [DF__Product__special__59063A47]  DEFAULT ((0)) FOR [special_product]
GO
ALTER TABLE [dbo].[Product] ADD  CONSTRAINT [DF_Product_estado]  DEFAULT ((1)) FOR [status]
GO
ALTER TABLE [dbo].[Product] ADD  CONSTRAINT [DF_Product_amount]  DEFAULT ((0)) FOR [amount]
GO
ALTER TABLE [dbo].[purchase] ADD  CONSTRAINT [DF__purchase__subtot__3C34F16F]  DEFAULT ((0)) FOR [subtotal]
GO
ALTER TABLE [dbo].[purchase] ADD  CONSTRAINT [DF__purchase__shippi__3D2915A8]  DEFAULT ((0)) FOR [shipping]
GO
ALTER TABLE [dbo].[purchase] ADD  CONSTRAINT [DF__purchase__total__3E1D39E1]  DEFAULT ((0)) FOR [total]
GO
ALTER TABLE [dbo].[purchase] ADD  CONSTRAINT [DF__purchase__status__3F115E1A]  DEFAULT ((1)) FOR [status_purchase]
GO
ALTER TABLE [dbo].[purchase] ADD  CONSTRAINT [DF_purchase_store]  DEFAULT ((1)) FOR [store]
GO
ALTER TABLE [dbo].[Client]  WITH CHECK ADD  CONSTRAINT [FK__Client__country___4CA06362] FOREIGN KEY([country_client])
REFERENCES [dbo].[CatalogCountry] ([id_Country])
GO
ALTER TABLE [dbo].[Client] CHECK CONSTRAINT [FK__Client__country___4CA06362]
GO
ALTER TABLE [dbo].[Client]  WITH CHECK ADD  CONSTRAINT [FK__Client__subscrip__4D94879B] FOREIGN KEY([subscription_client])
REFERENCES [dbo].[CatalogSubscription] ([id_subscription])
GO
ALTER TABLE [dbo].[Client] CHECK CONSTRAINT [FK__Client__subscrip__4D94879B]
GO
ALTER TABLE [dbo].[Client]  WITH CHECK ADD  CONSTRAINT [FK__Client__user_cre__71D1E811] FOREIGN KEY([user_credentials])
REFERENCES [dbo].[Users] ([id_user])
GO
ALTER TABLE [dbo].[Client] CHECK CONSTRAINT [FK__Client__user_cre__71D1E811]
GO
ALTER TABLE [dbo].[imagesProduct]  WITH CHECK ADD  CONSTRAINT [FK__imagesPro__image__46E78A0C] FOREIGN KEY([id_image])
REFERENCES [dbo].[Product] ([id_product])
GO
ALTER TABLE [dbo].[imagesProduct] CHECK CONSTRAINT [FK__imagesPro__image__46E78A0C]
GO
ALTER TABLE [dbo].[locationXCliente]  WITH CHECK ADD FOREIGN KEY([id_Client])
REFERENCES [dbo].[Client] ([id_client])
GO
ALTER TABLE [dbo].[purchase]  WITH CHECK ADD  CONSTRAINT [FK__purchase__client__40058253] FOREIGN KEY([client_purchase])
REFERENCES [dbo].[Client] ([id_client])
GO
ALTER TABLE [dbo].[purchase] CHECK CONSTRAINT [FK__purchase__client__40058253]
GO
ALTER TABLE [dbo].[purchase]  WITH CHECK ADD  CONSTRAINT [FK__purchase__status__40F9A68C] FOREIGN KEY([status_purchase])
REFERENCES [dbo].[CatalogStatusPurchase] ([id_StatusPurchase])
GO
ALTER TABLE [dbo].[purchase] CHECK CONSTRAINT [FK__purchase__status__40F9A68C]
GO
ALTER TABLE [dbo].[purchaseXProduct]  WITH CHECK ADD  CONSTRAINT [FK__purchaseX__id_pr__44CA3770] FOREIGN KEY([id_product])
REFERENCES [dbo].[Product] ([id_product])
GO
ALTER TABLE [dbo].[purchaseXProduct] CHECK CONSTRAINT [FK__purchaseX__id_pr__44CA3770]
GO
ALTER TABLE [dbo].[purchaseXProduct]  WITH CHECK ADD  CONSTRAINT [FK__purchaseX__subto__43D61337] FOREIGN KEY([id_purchase])
REFERENCES [dbo].[purchase] ([id_purchase])
GO
ALTER TABLE [dbo].[purchaseXProduct] CHECK CONSTRAINT [FK__purchaseX__subto__43D61337]
GO
ALTER TABLE [dbo].[Store]  WITH CHECK ADD  CONSTRAINT [FK__Store__country_s__49C3F6B7] FOREIGN KEY([country_store])
REFERENCES [dbo].[CatalogCountry] ([id_Country])
GO
ALTER TABLE [dbo].[Store] CHECK CONSTRAINT [FK__Store__country_s__49C3F6B7]
GO
ALTER TABLE [dbo].[Users]  WITH CHECK ADD FOREIGN KEY([type_user])
REFERENCES [dbo].[CatalogUserType] ([id_UserType])
GO
/****** Object:  StoredProcedure [dbo].[AddProduct]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[AddProduct]
@productName nvarchar(50), 
@whiskyType INT, 
@ageProduct INT,
@containerType INT, 
@idDistillery int, 
@price int, 
@exclusivity bit,
@image	VARBINARY(MAX),
@amount INT
AS
DECLARE
@lastInsertedProduct INT
	IF @productName IS NULL or @whiskyType IS NULL OR @ageProduct IS NULL OR @containerType IS NULL OR @idDistillery IS NULL OR
	@price IS NULL OR @exclusivity IS NULL OR @image IS NULL OR @amount IS NULL 
	BEGIN
		PRINT 1
		RETURN 1 --'One or more paramters are null'
		
	END
	ELSE
	IF (SELECT COUNT(*) FROM [WhiskyClubCentral].[dbo].[CatalogContainer] WHERE id_Container = @containerType) <= 0
	BEGIN
		PRINT 2
		RETURN 2 --'Invalid container type'
	END
	ELSE
	IF (SELECT COUNT(*) FROM [WhiskyClubCentral].[dbo].[CatalogDistillery] WHERE id_Distillery = @idDistillery) <= 0
	BEGIN
		PRINT 3
		RETURN 3 --'Invalid distillery ID'
	END
	ELSE
	IF (SELECT COUNT(*) FROM [WhiskyClubCentral].[dbo].[CatalogProductType] WHERE id_ProductType = @whiskyType) <= 0
	BEGIN
		PRINT 4
		RETURN 4 --'Invalid product type'
	END
	ELSE
	BEGIN
		INSERT INTO [WhiskyClubCentral].[dbo].[Product] (
		name_product,
		type_product,
		aged_product,
		distillery_product,
		container_product,
		price_product,
		special_product,
		status,
		amount,
		image
		) VALUES (
		@productName,
		@whiskyType,
		@ageProduct,
		@idDistillery,
		@containerType,
		@price,
		@exclusivity,
		1,
		@amount,
		@image
		)

		SET @lastInsertedProduct = (SELECT TOP 1 id_product FROM [WhiskyClubCentral].[dbo].[Product] ORDER BY id_product DESC)

		

		INSERT INTO [WhiskyGermany].[dbo].[Product]
				   ([id_product]
				   ,[name_product]
				   ,[type_product]
				   ,[aged_product]
				   ,[container_product]
				   ,[price_product]
				   ,[special_product]
				   ,image)
			 VALUES
				   (@lastInsertedProduct
				   ,@productName
				   ,@whiskyType
				   ,@ageProduct
				   ,@containerType
				   ,@price
				   ,@exclusivity,
				   @image)

		INSERT INTO [WhiskyJapan].[dbo].[Product]
				   ([id_product]
				   ,[name_product]
				   ,[type_product]
				   ,[aged_product]
				   ,[container_product]
				   ,[price_product]
				   ,[special_product]
				   ,image)
			 VALUES
				   (@lastInsertedProduct
				   ,@productName
				   ,@whiskyType
				   ,@ageProduct
				   ,@containerType
				   ,@price
				   ,@exclusivity
				   ,@image)

		INSERT INTO [WhiskyUS].[dbo].[Product]
				   ([id_product]
				   ,[name_product]
				   ,[type_product]
				   ,[aged_product]
				   ,[container_product]
				   ,[price_product]
				   ,[special_product]
				   ,image)
			 VALUES
				   (@lastInsertedProduct
				   ,@productName
				   ,@whiskyType
				   ,@ageProduct
				   ,@containerType
				   ,@price
				   ,@exclusivity
				   ,@image)
		END
GO
/****** Object:  StoredProcedure [dbo].[AddProductToStore]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[AddProductToStore]
@idStore INT,
@amount INT
AS
DECLARE
@lastInsertedProduct INT,
@IdCountryStore INT
    IF  @idStore IS NULL OR @amount IS NULL 
    BEGIN
        RETURN 1 --'One or more paramters are null'
    END
    SET @lastInsertedProduct = (SELECT TOP 1 id_product FROM [WhiskyClubCentral].[dbo].[Product] ORDER BY id_product DESC)
    IF (@lastInsertedProduct IS NULL)
    BEGIN
        RETURN 2 --'No products in the database'
    END

    SET @IdCountryStore = (SELECT country_store FROM [WhiskyClubCentral].[dbo].[Store] WHERE id_store = @idStore)

    IF @IdCountryStore = 1 --Store is from Germany
    BEGIN
        INSERT INTO [WhiskyGermany].[dbo].[ProductxStore] (aumount,id_store,id_product) VALUES (@amount,@idStore,@lastInsertedProduct)
    END
    ELSE
    IF @IdCountryStore = 2 --Store is from the United States
    BEGIN
       INSERT INTO [WhiskyUS].[dbo].[ProductxStore] (aumount,id_store,id_product) VALUES (@amount,@idStore,@lastInsertedProduct)
    END
    ELSE
    IF @IdCountryStore = 3 --Store is from Japan
    BEGIN
        INSERT INTO [WhiskyJapan].[dbo].[ProductxStore] (aumount,id_store,id_product) VALUES (@amount,@idStore,@lastInsertedProduct)
    END
    RETURN 0
GO
/****** Object:  StoredProcedure [dbo].[ChangeAccountSubscription]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[ChangeAccountSubscription] 
@username nvarchar(64),
@newPlan int
AS
DECLARE @IdClient int,
@country_id INT

EXEC @IdClient = FindUserByNickname @nickname = @username

SET @country_id = (SELECT country_client FROM [WhiskyClubCentral].[dbo].[Client] WHERE id_client = @IdClient)

UPDATE [WhiskyClubCentral].[dbo].[Client] SET subscription_client = @newPlan WHERE id_client = @IdClient

IF (@country_id = 1) --Client is from Germany
        BEGIN
            UPDATE [WhiskyGermany].[dbo].[Client] SET subscription_client = @newPlan WHERE id_client = @IdClient
        END
        ELSE
        IF (@country_id = 2) --Client is from the United States
        BEGIN
            UPDATE [WhiskyUS].[dbo].[Client] SET subscription_client = @newPlan WHERE id_client = @IdClient
        END
        IF (@country_id = 3) --Client is from Japan
        BEGIN
            UPDATE [WhiskyJapan].[dbo].[Client] SET subscription_client = @newPlan WHERE id_client = @IdClient
        END



GO
/****** Object:  StoredProcedure [dbo].[consultProducts]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[consultProducts]
@id_client INT
AS
BEGIN
	SET NOCOUNT ON; 
DECLARE	
	@error INT,
	@id_subs INT,
	@id_product_cursor INT, --for products cicle
	@id_store_cursor INT, --for storexproducts cicle
	@client_location geography,
	@client_country INT,
	@cliente_money_equi FLOAT,
	@product_id INT,
	@product_name VARCHAR(128),
	@product_type VARCHAR(128),
	@product_aged INT,
	@destilley VARCHAR(128),
	@product_container VARCHAR(128),
	@product_price MONEY,
	@product_amount MONEY,
	@product_distance FLOAT,
	@product_status BIT,
	@product_special VARCHAR(128),
	--
	@nearbyStore VARCHAR(128),
	@nearbyCountry VARCHAR(128),
	@money_type VARCHAR(128),
	--Stores (validate distance)
	@store_id INT, 
	@store_name VARCHAR(128),
	@store_distance FLOAT,
	@store_location GEOGRAPHY,
	@store_country VARCHAR(128)


DECLARE @result TABLE
	(product_code INT, 
	 product_name VARCHAR(128),
	 product_type VARCHAR(128),
	 product_aged INT,
	 destilley VARCHAR(128),
	 product_container VARCHAR(128),
	 product_price MONEY,
	 amount INT,
	 nearbyStore VARCHAR(128),
	 nearbyCountry VARCHAR(128),
	 nearbyDistance FLOAT,
	 money_type VARCHAR(128),
	 statusProduct VARCHAR(128)
	)

DECLARE @distanceAux TABLE
	(store_name VARCHAR(128),
	 store_country VARCHAR(128),
	 store_distance FLOAT
	)

	SET @error = 0

	--values not null
	IF (@id_client IS NULL)
		BEGIN
			SET @error = 1 --null value
			RETURN @error
		END

	--client exists?
	IF (SELECT COUNT(*) FROM Client WHERE [id_client] = @id_client AND [status_client] = 1) = 0
		BEGIN
			SET @error = 1 --client not exist
			RETURN @error
		END

	--GET LOCATION:
	SELECT @client_location = [location_client] FROM [dbo].[Client] WHERE [id_client] = @id_client AND [status_client] = 1
	--GET COUNTRY
	SELECT @client_country = [country_client] FROM [dbo].[Client] WHERE [id_client] = @id_client AND [status_client] = 1
	--GET MONEY EQUIVALENCE 
	SELECT @cliente_money_equi = [dollar_equivalent] FROM [dbo].[CatalogCountry] WHERE [id_Country] = @client_country
	--GET MONEY TYPE
	SELECT @money_type = [money_type] FROM [dbo].[CatalogCountry] WHERE [id_Country] = @client_country
	--GET SUB
	SELECT @id_subs =  [subscription_client]  FROM [dbo].[Client] WHERE [id_client] = @id_client AND [status_client] = 1



	--CICLE
	SELECT @id_product_cursor = MIN([id_product]) FROM [dbo].[Product]
	WHILE  @id_product_cursor IS NOT NULL
	
	BEGIN
	DELETE FROM @distanceAux
		--GET NEARBY STORE
		--1- GERMANY
		SELECT @id_store_cursor = MIN([id_productxStore]) FROM [WhiskyGermany].[dbo].[ProductxStore]
		WHILE  @id_store_cursor IS NOT NULL
		BEGIN
			IF (SELECT COUNT(*) FROM [WhiskyGermany].[dbo].[ProductxStore] 
				WHERE  [id_store] = @id_store_cursor AND [id_product] = @id_product_cursor AND [aumount] > 0)>  0
				BEGIN
					SET @store_id = @id_store_cursor
					SELECT @store_name = [name_store], @store_location = [location_store], @store_country = [name_Country]
							FROM [dbo].[Store] 
							INNER JOIN [dbo].[CatalogCountry] ON [country_store] = [id_Country]
							WHERE [id_store] = @store_id 
					SET @store_distance = @store_location.STDistance(@client_location)
				END

			INSERT INTO @distanceAux 
				VALUES(@store_name,@store_country,@store_distance)
			SET @id_store_cursor = (SELECT MIN([id_productxStore]) FROM [WhiskyGermany].[dbo].[ProductxStore] 
								WHERE [id_product] > @id_store_cursor) --NEXT STORE
			
			PRINT @id_store_cursor;
		END--END WHILE STORE
		--GET NEARBY STORE
		--2- EEUU
		--3- JAPAN
		--SELECT NEARBY STORE
		SELECT @nearbyStore = store_name, @nearbyCountry = store_country, @store_distance = store_distance 
				FROM @distanceAux WHERE store_distance = (SELECT MIN(store_distance) FROM @distanceAux )

		--
		IF (SELECT [status] FROM [dbo].[Product] WHERE [id_product] = @id_product_cursor) = 1
			AND
			((SELECT [special_product] FROM [dbo].[Product] WHERE [id_product] = @id_product_cursor) = 0 OR @id_subs = 3 OR @id_subs = 4)
			AND 
			(SELECT [amount] FROM [dbo].[Product] WHERE [id_product] = @id_product_cursor) > 1
			BEGIN
			--UPDATE VALUES
				SELECT 
					 @product_id = [id_product]
					,@product_name = [name_product]
					,@product_type = [dbo].[CatalogProductType].name_ProductType
					,@product_aged = [aged_product]
					,@destilley = [dbo].[CatalogDistillery].name_Distillery
					,@product_container = [dbo].[CatalogContainer].description_Container
					,@product_price = ([price_product]*@cliente_money_equi)
					,@product_amount = [amount]
					,@product_status = [special_product]
				FROM [dbo].[Product] 
				INNER JOIN  [dbo].[CatalogProductType] ON [type_product] = [id_ProductType]
				INNER JOIN  [dbo].[CatalogDistillery] ON [distillery_product] = [id_Distillery]
				INNER JOIN  [dbo].[CatalogContainer] ON [container_product] = [id_Container]
				WHERE [status] = 1 AND ([special_product] = 0 OR @id_subs = 3 OR @id_subs = 4) AND [id_product] = @id_product_cursor AND [amount] > 0 

				IF (@product_status = 1)
					SET @product_special = 'SPECIAL'
				ELSE
					SET @product_special = 'NORMAL'
				--insert to result
				INSERT INTO @result VALUES
							(@id_product_cursor,--product_code
							 @product_name,		--product_name
							 @product_type,		--product_type 
							 @product_aged,		--product_aged
							 @destilley,		--destilley 
							 @product_container, --product_container 
							 @product_price,	--product_price 
							 @product_amount,	--amount 
							 @nearbyStore,		--nearbyStore
							 @nearbyCountry,	--nearbyCountry 
							 @store_distance/1000,
							 @money_type,
							 @product_special)

			END
		
		SET @id_product_cursor = (SELECT MIN([id_product]) FROM [dbo].[Product] WHERE [id_product] > @id_product_cursor) --NEXT PRODUCT
	END --end while

	SELECT * FROM @result


print @error;
RETURN @error
END
GO
/****** Object:  StoredProcedure [dbo].[consultProductsParameters]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[consultProductsParameters]
@id_client INT,
@id_productType_ INT,
@product_name_ VARCHAR(128),
@lowPrice_ INT,
@higPrice_ INT,
@distance_ INT,
@order_ INT
AS
BEGIN
	SET NOCOUNT ON; 
DECLARE	
	@error INT,
	@id_product_cursor INT, --for products cicle
	@id_store_cursor INT, --for storexproducts cicle
	@client_location geography,
	@client_country INT,
	@cliente_money_equi FLOAT,
	@product_id INT,
	@product_name VARCHAR(128),
	@product_type VARCHAR(128),
	@product_aged INT,
	@destilley VARCHAR(128),
	@product_container VARCHAR(128),
	@product_price MONEY,
	@product_amount MONEY,
	@id_subs INT,
	@product_status BIT,
	--
	@nearbyStore VARCHAR(128),
	@nearbyCountry VARCHAR(128),
	@money_type VARCHAR(128),
	--Stores (validate distance)
	@store_id INT, 
	@store_name VARCHAR(128),
	@store_distance FLOAT,
	@store_location GEOGRAPHY,
	@store_country VARCHAR(128),
	@product_special  VARCHAR(128)

DECLARE @result TABLE
	(product_code INT, 
	 product_name VARCHAR(128),
	 product_type VARCHAR(128),
	 product_aged INT,
	 destilley VARCHAR(128),
	 product_container VARCHAR(128),
	 product_price MONEY,
	 amount INT,
	 nearbyStore VARCHAR(128),
	 nearbyCountry VARCHAR(128),
	 nearbyLocation FLOAT,
	 money_type VARCHAR(128),
	 statusProduct  VARCHAR(128)
	)

DECLARE @distanceAux TABLE
	(store_name VARCHAR(128),
	 store_country VARCHAR(128),
	 store_distance FLOAT
	)

	SET @error = 0

	
	--values not null
	IF (@id_client IS NULL)
		BEGIN
			SET @error = 1 --null value
			RETURN @error
		END

	--client exists?
	IF (SELECT COUNT(*) FROM Client WHERE [id_client] = @id_client AND [status_client] = 1) = 0
		BEGIN
			SET @error = 1 --client not exist
			RETURN @error
		END

	--GET LOCATION:
	SELECT @client_location = [location_client] FROM [dbo].[Client] WHERE [id_client] = @id_client AND [status_client] = 1
	--GET COUNTRY
	SELECT @client_country = [country_client] FROM [dbo].[Client] WHERE [id_client] = @id_client AND [status_client] = 1
	--GET MONEY EQUIVALENCE 
	SELECT @cliente_money_equi = [dollar_equivalent] FROM [dbo].[CatalogCountry] WHERE [id_Country] = @client_country
	--GET MONEY TYPE
	SELECT @money_type = [money_type] FROM [dbo].[CatalogCountry] WHERE [id_Country] = @client_country
	--GET SUB
	SELECT @id_subs =  [subscription_client]  FROM [dbo].[Client] WHERE [id_client] = @id_client AND [status_client] = 1


	--CICLE
	SELECT @id_product_cursor = MIN([id_product]) FROM [dbo].[Product]
	WHILE  @id_product_cursor IS NOT NULL
	BEGIN
	DELETE FROM @distanceAux
		IF (((SELECT [name_product] FROM [dbo].[Product] WHERE [id_product]=@id_product_cursor) LIKE '%'+@product_name_+'%') OR (@product_name_ = '')) --BY NAME
			AND (((SELECT [type_product] FROM [dbo].[Product] WHERE [id_product]=@id_product_cursor) = @id_productType_) OR (@id_productType_ = 0)) --BY TYPE
			AND (((SELECT [price_product] FROM [dbo].[Product] WHERE [id_product]=@id_product_cursor) >= @lowPrice_) OR (@lowPrice_ = '')) --low price
			AND (((SELECT [price_product] FROM [dbo].[Product] WHERE [id_product]=@id_product_cursor) <= @higPrice_) OR (@higPrice_ = '')) --high price
			AND (((SELECT [price_product] FROM [dbo].[Product] WHERE [id_product]=@id_product_cursor) BETWEEN @lowPrice_ AND @higPrice_ ) OR (@lowPrice_ = '' OR @higPrice_ = '')) --high price
			AND (SELECT [status] FROM [dbo].[Product] WHERE [id_product] = @id_product_cursor) = 1
			AND((SELECT [special_product] FROM [dbo].[Product] WHERE [id_product] = @id_product_cursor) = 0 OR @id_subs = 3 OR @id_subs = 4)
			AND (SELECT [amount] FROM [dbo].[Product] WHERE [id_product] = @id_product_cursor) > 1
			--validar aqui
			
			
			BEGIN
				--GET NEARBY STORE
		--1- GERMANY
		SELECT @id_store_cursor = MIN([id_productxStore]) FROM [WhiskyGermany].[dbo].[ProductxStore]
		WHILE  @id_store_cursor IS NOT NULL
		BEGIN
			IF (SELECT COUNT(*) FROM [WhiskyGermany].[dbo].[ProductxStore] 
				WHERE  [id_store] = @id_store_cursor AND [id_product] = @id_product_cursor AND [aumount] > 0)>  0
				BEGIN
					SET @store_id = @id_store_cursor
					SELECT @store_name = [name_store], @store_location = [location_store], @store_country = [name_Country]
							FROM [dbo].[Store] 
							INNER JOIN [dbo].[CatalogCountry] ON [country_store] = [id_Country]
							WHERE [id_store] = @store_id 
					SET @store_distance = @store_location.STDistance(@client_location)
				END

			INSERT INTO @distanceAux 
				VALUES(@store_name,@store_country,@store_distance)
			SET @id_store_cursor = (SELECT MIN([id_productxStore]) FROM [WhiskyGermany].[dbo].[ProductxStore] 
								WHERE [id_product] > @id_store_cursor) --NEXT STORE
			
			PRINT @id_store_cursor;
		END--END WHILE STORE
		--GET NEARBY STORE
		--2- EEUU
		--3- JAPAN
		--SELECT NEARBY STORE
		SELECT @nearbyStore = store_name, @nearbyCountry = store_country, @store_distance = store_distance 
				FROM @distanceAux WHERE store_distance = (SELECT MIN(store_distance) FROM @distanceAux )

		IF ((@store_distance/1000) < @distance_) OR (@distance_ = '')
			BEGIN
				--UPDATE VALUES
				SELECT 
					 @product_id = [id_product]
					,@product_name = [name_product]
					,@product_type = [dbo].[CatalogProductType].name_ProductType
					,@product_aged = [aged_product]
					,@destilley = [dbo].[CatalogDistillery].name_Distillery
					,@product_container = [dbo].[CatalogContainer].description_Container
					,@product_price = ([price_product]*@cliente_money_equi)
					,@product_amount = [amount]
					,@product_status = [special_product]
				FROM [dbo].[Product] 
				INNER JOIN  [dbo].[CatalogProductType] ON [type_product] = [id_ProductType]
				INNER JOIN  [dbo].[CatalogDistillery] ON [distillery_product] = [id_Distillery]
				INNER JOIN  [dbo].[CatalogContainer] ON [container_product] = [id_Container]
				WHERE [id_product] = @id_product_cursor
		
				IF (@product_status = 1)
					SET @product_special = 'SPECIAL'
				ELSE
					SET @product_special = 'NORMAL'

				--insert to result
				INSERT INTO @result VALUES
							(@id_product_cursor,--product_code
							 @product_name,		--product_name
							 @product_type,		--product_type 
							 @product_aged,		--product_aged
							 @destilley,		--destilley 
							 @product_container, --product_container 
							 @product_price,	--product_price 
							 @product_amount,	--amount 
							 @nearbyStore,		--nearbyStore
							 @nearbyCountry,	--nearbyCountry 
							 (@store_distance/1000),
							 @money_type,
							 @product_special)
					END

			END --END IF
		
		

		SET @id_product_cursor = (SELECT MIN([id_product]) FROM [dbo].[Product] WHERE [id_product] > @id_product_cursor) --NEXT PRODUCT
	END --end while

	IF (@order_ = 2)
		BEGIN
			--price priority
			IF (@lowPrice_ != '' or @higPrice_ != '')
				BEGIN
					SELECT * FROM @result ORDER BY product_price DESC
					RETURN @error;
				END

			--distance
			IF (@distance_ != '')
				BEGIN
					SELECT * FROM @result ORDER BY nearbyLocation DESC
					RETURN @error;
				END
			--type
			IF (@id_productType_ != 0)
				BEGIN
					SELECT * FROM @result ORDER BY product_type DESC
					RETURN @error;
				END
			--nombre
			IF (@product_name_ != '')
				BEGIN
					SELECT * FROM @result ORDER BY product_name DESC
					RETURN @error;
				END
		END

	IF (@order_ = 1)
		BEGIN
			--price priority
			IF (@lowPrice_ != '' or @higPrice_ != '')
				BEGIN
					SELECT * FROM @result ORDER BY product_price ASC
					RETURN @error;
				END

			--distance
			IF (@distance_ != '')
				BEGIN
					SELECT * FROM @result ORDER BY nearbyLocation ASC
					RETURN @error;
				END
			--type
			IF (@id_productType_ != 0)
				BEGIN
					SELECT * FROM @result ORDER BY product_type ASC
					RETURN @error;
				END
			--nombre
			IF (@product_name_ != '')
				BEGIN
					SELECT * FROM @result ORDER BY product_name ASC
					RETURN @error;
				END
		END
		SELECT * FROM @result

print @error;
RETURN @error
END
GO
/****** Object:  StoredProcedure [dbo].[consultProductsXStore]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[consultProductsXStore]
@id_client INT,
@id_store_ INT
AS
BEGIN
	SET NOCOUNT ON; 
DECLARE	
	@error INT,
	@id_product_cursor INT, --for products cicle
	@id_store_cursor INT, --for storexproducts cicle
	@client_location geography,
	@client_country INT,
	@cliente_money_equi FLOAT,
	@product_id INT,
	@product_name VARCHAR(128),
	@product_type VARCHAR(128),
	@product_aged INT,
	@destilley VARCHAR(128),
	@product_container VARCHAR(128),
	@product_price MONEY,
	@product_amount MONEY,
	@id_subs INT,
	@product_status BIT,
	--
	@nearbyStore VARCHAR(128),
	@nearbyCountry VARCHAR(128),
	@money_type VARCHAR(128),
	--Stores (validate distance)
	@store_id INT, 
	@store_name VARCHAR(128),
	@store_distance FLOAT,
	@store_location GEOGRAPHY,
	@store_country VARCHAR(128),
	@product_special  VARCHAR(128)

DECLARE @result TABLE
	(product_code INT, 
	 product_name VARCHAR(128),
	 product_type VARCHAR(128),
	 product_aged INT,
	 destilley VARCHAR(128),
	 product_container VARCHAR(128),
	 product_price MONEY,
	 amount INT,
	 idStore INT,
	 money_type VARCHAR(128),
	 statusProduct  VARCHAR(128),
	 nearbyStore  VARCHAR(128)
	)
	SET @error = 0

	
	--values not null
	IF (@id_client IS NULL)
		BEGIN
			SET @error = 1 --null value
			RETURN @error
		END

	--client exists?
	IF (SELECT COUNT(*) FROM Client WHERE [id_client] = @id_client AND [status_client] = 1) = 0
		BEGIN
			SET @error = 1 --client not exist
			RETURN @error
		END

	--GET LOCATION:
	SELECT @client_location = [location_client] FROM [dbo].[Client] WHERE [id_client] = @id_client AND [status_client] = 1
	--GET COUNTRY
	SELECT @client_country = [country_client] FROM [dbo].[Client] WHERE [id_client] = @id_client AND [status_client] = 1
	--GET MONEY EQUIVALENCE 
	SELECT @cliente_money_equi = [dollar_equivalent] FROM [dbo].[CatalogCountry] WHERE [id_Country] = @client_country
	--GET MONEY TYPE
	SELECT @money_type = [money_type] FROM [dbo].[CatalogCountry] WHERE [id_Country] = @client_country
	--GET SUB
	SELECT @id_subs =  [subscription_client]  FROM [dbo].[Client] WHERE [id_client] = @id_client AND [status_client] = 1
	SELECT @nearbyStore =  [name_store] from [dbo].[Store] where [id_store] = @id_store_

	--GERMANY
	IF (@id_store_ = 1 OR @id_store_ = 2 OR @id_store_ = 3)
		BEGIN
			SELECT @id_store_cursor = MIN([id_productxStore]) FROM [WhiskyGermany].[dbo].[ProductxStore]
			WHILE  @id_store_cursor IS NOT NULL
			BEGIN
				IF(SELECT [id_store] FROM [WhiskyGermany].[dbo].[ProductxStore] 
					WHERE [id_productxStore]=@id_store_cursor)=@id_store_
					BEGIN
					--SELECT PRODUC ID
					SELECT @product_id = [id_product] FROM  [WhiskyGermany].[dbo].[ProductxStore] WHERE [id_productxStore]=@id_store_cursor
					--STATUS TRUE?
					--AMOUNTA > 0?
					IF (SELECT [aumount] FROM [WhiskyGermany].[dbo].[ProductxStore] WHERE [id_productxStore]=@id_store_cursor) > 0
						AND (SELECT [status] FROM [WhiskyClubCentral].[dbo].[Product]  WHERE [id_product] =@product_id) = 1
						AND ((SELECT [special_product] FROM [WhiskyClubCentral].[dbo].[Product]  WHERE [id_product] =@product_id) = 0 OR @id_subs=3 or @id_subs=4)
						BEGIN
						SELECT 
						   @product_amount=[aumount]
						  ,@product_id = [WhiskyGermany].[dbo].[ProductxStore].[id_product]
						  ,@product_name=[name_product]
						  ,@product_type=[dbo].[CatalogProductType].name_ProductType
						  ,@product_aged = [aged_product]
						  ,@destilley = [dbo].[CatalogDistillery].name_Distillery
						  ,@product_container = [dbo].[CatalogContainer].description_Container
						  ,@product_price = ([price_product]*@cliente_money_equi)
						  ,@product_special = [special_product]
						  ,@product_amount = [WhiskyGermany].[dbo].[ProductxStore].[aumount]

					  FROM [WhiskyGermany].[dbo].[ProductxStore]
					  INNER JOIN [WhiskyClubCentral].[dbo].[Product] ON [WhiskyClubCentral].[dbo].[Product].[id_product] = [WhiskyGermany].[dbo].[ProductxStore].id_product
					  INNER JOIN  [dbo].[CatalogProductType] ON [type_product] = [id_ProductType]
					  INNER JOIN  [dbo].[CatalogDistillery] ON [distillery_product] = [id_Distillery]
					  INNER JOIN  [dbo].[CatalogContainer] ON [container_product] = [id_Container]
					  WHERE [aumount] > 0 AND [id_store] = @id_store_ AND [status] = 1 AND [id_store] = @id_store_ AND [id_productxStore]=@id_store_cursor
					  AND ([WhiskyClubCentral].[dbo].[Product].[special_product] = 0 or @id_subs=3 or @id_subs=4)

				  

					   --insert to result
					INSERT INTO @result VALUES
								(@product_id,--product_code
								@product_name,		--product_name
								@product_type,		--product_type 
								@product_aged,		--product_aged
								@destilley,		--destilley 
								@product_container, --product_container 
								@product_price,	--product_price 
								@product_amount,	--amount 
								@id_store_,		--nearbyStore
								@money_type,
								@product_special,
								@nearbyStore)
					END
					END
				
			SELECT @id_store_cursor = MIN([id_productxStore]) FROM [WhiskyGermany].[dbo].[ProductxStore] WHERE [id_productxStore] > @id_store_cursor
			END--END WHILE STORE
			SELECT * FROM @result
			RETURN 0;

		END--END GERMANY 

		--JAPAN
	IF (@id_store_ = 4 OR @id_store_ = 5 OR @id_store_ = 6)
		BEGIN
			SELECT @id_store_cursor = MIN([id_productxStore]) FROM [WhiskyJapan].[dbo].[ProductxStore]
			WHILE  @id_store_cursor IS NOT NULL
			BEGIN
				IF(SELECT [id_store] FROM [WhiskyJapan].[dbo].[ProductxStore] 
					WHERE [id_productxStore]=@id_store_cursor)=@id_store_
					BEGIN
					--SELECT PRODUC ID
					SELECT @product_id = [id_product] FROM  [WhiskyJapan].[dbo].[ProductxStore] WHERE [id_productxStore]=@id_store_cursor
					--STATUS TRUE?
					--AMOUNTA > 0?
					IF (SELECT [aumount] FROM [WhiskyJapan].[dbo].[ProductxStore] WHERE [id_productxStore]=@id_store_cursor) > 0
						AND (SELECT [status] FROM [WhiskyClubCentral].[dbo].[Product]  WHERE [id_product] =@product_id) = 1
						AND ((SELECT [special_product] FROM [WhiskyClubCentral].[dbo].[Product]  WHERE [id_product] =@product_id) = 0 OR @id_subs=3 or @id_subs=4)
					BEGIN
					SELECT 
					   @product_amount=[aumount]
					  ,@product_id = [WhiskyJapan].[dbo].[ProductxStore].[id_product]
					  ,@product_name=[name_product]
					  ,@product_type=[dbo].[CatalogProductType].name_ProductType
					  ,@product_aged = [aged_product]
					  ,@destilley = [dbo].[CatalogDistillery].name_Distillery
					  ,@product_container = [dbo].[CatalogContainer].description_Container
					  ,@product_price = ([price_product]*@cliente_money_equi)
					  ,@product_special = [special_product]
					  ,@product_amount = [WhiskyJapan].[dbo].[ProductxStore].[aumount]
				  FROM [WhiskyJapan].[dbo].[ProductxStore]
				  INNER JOIN [WhiskyClubCentral].[dbo].[Product] ON [WhiskyClubCentral].[dbo].[Product].[id_product] = [WhiskyJapan].[dbo].[ProductxStore].id_product
				  INNER JOIN  [dbo].[CatalogProductType] ON [type_product] = [id_ProductType]
				  INNER JOIN  [dbo].[CatalogDistillery] ON [distillery_product] = [id_Distillery]
				  INNER JOIN  [dbo].[CatalogContainer] ON [container_product] = [id_Container]
				  WHERE [aumount] > 0 AND [id_store] = @id_store_ AND [status] = 1 AND [id_store] = @id_store_ AND [id_productxStore]=@id_store_cursor
				  AND ([WhiskyClubCentral].[dbo].[Product].[special_product] = 0 or @id_subs=3 or @id_subs=4)

				   --insert to result
				INSERT INTO @result VALUES
							(@product_id,--product_code
							@product_name,		--product_name
							@product_type,		--product_type 
							@product_aged,		--product_aged
							@destilley,		--destilley 
							@product_container, --product_container 
							@product_price,	--product_price 
							@product_amount,	--amount 
							@id_store_,		--nearbyStore
							@money_type,
							@product_special,
							@nearbyStore)
					END
					END
				
			SELECT @id_store_cursor = MIN([id_productxStore]) FROM [WhiskyJapan].[dbo].[ProductxStore] WHERE [id_productxStore] > @id_store_cursor
			END--END WHILE STORE
			SELECT * FROM @result
			RETURN 0;

		END--END JAPAN

			--EU
	IF (@id_store_ = 4 OR @id_store_ = 5 OR @id_store_ = 6)
		BEGIN
			SELECT @id_store_cursor = MIN([id_productxStore]) FROM [WhiskyUS].[dbo].[ProductxStore]
			WHILE  @id_store_cursor IS NOT NULL
			BEGIN
				IF(SELECT [id_store] FROM [WhiskyUS].[dbo].[ProductxStore] 
					WHERE [id_productxStore]=@id_store_cursor)=@id_store_
					BEGIN
					--SELECT PRODUC ID
					SELECT @product_id = [id_product] FROM  [WhiskyUS].[dbo].[ProductxStore] WHERE [id_productxStore]=@id_store_cursor
					--STATUS TRUE?
					--AMOUNTA > 0?
					IF (SELECT [aumount] FROM [WhiskyUS].[dbo].[ProductxStore] WHERE [id_productxStore]=@id_store_cursor) > 0
						AND (SELECT [status] FROM [WhiskyClubCentral].[dbo].[Product]  WHERE [id_product] =@product_id) = 1
						AND ((SELECT [special_product] FROM [WhiskyClubCentral].[dbo].[Product]  WHERE [id_product] =@product_id) = 0 OR @id_subs=3 or @id_subs=4)
					BEGIN
					SELECT 
					   @product_amount=[aumount]
					  ,@product_id = [WhiskyUS].[dbo].[ProductxStore].[id_product]
					  ,@product_name=[name_product]
					  ,@product_type=[dbo].[CatalogProductType].name_ProductType
					  ,@product_aged = [aged_product]
					  ,@destilley = [dbo].[CatalogDistillery].name_Distillery
					  ,@product_container = [dbo].[CatalogContainer].description_Container
					  ,@product_price = ([price_product]*@cliente_money_equi)
					  ,@product_special = [special_product]
					  ,@product_amount = [WhiskyUS].[dbo].[ProductxStore].[aumount]
				  FROM [WhiskyUS].[dbo].[ProductxStore]
				  INNER JOIN [WhiskyClubCentral].[dbo].[Product] ON [WhiskyClubCentral].[dbo].[Product].[id_product] = [WhiskyUS].[dbo].[ProductxStore].id_product
				  INNER JOIN  [dbo].[CatalogProductType] ON [type_product] = [id_ProductType]
				  INNER JOIN  [dbo].[CatalogDistillery] ON [distillery_product] = [id_Distillery]
				  INNER JOIN  [dbo].[CatalogContainer] ON [container_product] = [id_Container]
				  WHERE [aumount] > 0 AND [id_store] = @id_store_ AND [status] = 1 AND [id_store] = @id_store_ AND [id_productxStore]=@id_store_cursor
				  AND ([WhiskyClubCentral].[dbo].[Product].[special_product] = 0 or @id_subs=3 or @id_subs=4)

				   --insert to result
				INSERT INTO @result VALUES
							(@product_id,--product_code
							@product_name,		--product_name
							@product_type,		--product_type 
							@product_aged,		--product_aged
							@destilley,		--destilley 
							@product_container, --product_container 
							@product_price,	--product_price 
							@product_amount,	--amount 
							@id_store_,		--nearbyStore
							@money_type,
							@product_special,
							@nearbyStore)
					END
					END
				
			SELECT @id_store_cursor = MIN([id_productxStore]) FROM [WhiskyUS].[dbo].[ProductxStore] WHERE [id_productxStore] > @id_store_cursor
			END--END WHILE STORE
			SELECT * FROM @result
			RETURN 0;

		END--END EU


print @error;
RETURN @error
END
GO
/****** Object:  StoredProcedure [dbo].[consultPurchaseXStore]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[consultPurchaseXStore]
@idStore_ INT
AS
BEGIN
	SET NOCOUNT ON; 
DECLARE	
	@error INT

SELECT [id_purchase]
      ,[name_client]
      ,[date_purchase],
	   [email_client]
      ,([purchase].[location_client].STAsText()) AS direction
      ,[subtotal]
      ,[shipping]
      ,[total]
      ,[id_PurchasingManager]
      ,[id_Dealer]
      ,[name_StatusPurchase]
      ,[distance]
      ,[moneyType]
	  ,[store]
  FROM [dbo].[purchase] 
  INNER JOIN [dbo].[Client] ON  [client_purchase] = [id_client]
  INNER JOIN [dbo].[CatalogStatusPurchase] ON [status_purchase] = [id_StatusPurchase]
  WHERE [store] = @idStore_ AND [status_purchase] = 1

print @error;
RETURN @error
END
GO
/****** Object:  StoredProcedure [dbo].[CreateNewUser]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[CreateNewUser] 
@nickname nvarchar(50), 
@password nvarchar(50), 
@full_name varchar(50), 
@country_id int, 
@email varchar(64), 
@id_subscription int
AS
DECLARE
@lastInsertedUser INT,
@lastInsertedClient INT

	IF (@nickname IS NULL or @password IS NULL OR @full_name IS NULL OR @country_id IS NULL OR @email IS NULL OR @id_subscription IS NULL)
	BEGIN
		RETURN 1 --'One or more paramters are null'
	END

	IF (SELECT COUNT(*) FROM [WhiskyClubCentral].[dbo].[Users] WHERE nickname = @nickname) > 0
	BEGIN
		RETURN 2 --'Nickname is already in use'
	END

	IF (SELECT COUNT(*) FROM [WhiskyClubCentral].[dbo].[Client] WHERE email_client = @email) > 0
	BEGIN
		RETURN 3 --'Email is already in use'
	END


	INSERT INTO [WhiskyClubCentral].[dbo].[Users] (nickname,password_user,type_user) VALUES (@nickname,PWDENCRYPT(@password),1)

	SET @lastInsertedUser = (SELECT MAX(id_user) FROM [dbo].[Users])
	SET @lastInsertedClient = (SELECT MAX([id_client]) FROM [WhiskyClubCentral].[dbo].[Client]) + 1

	INSERT INTO [WhiskyClubCentral].[dbo].[Client]
			   ([id_client]
			   ,[name_client]
			   ,[country_client]
			   ,[email_client]
			   ,[subscription_client]
			   ,[user_credentials])
		 VALUES
			   (@lastInsertedClient
			   ,@full_name
			   ,@country_id
			   ,@email
			   ,@id_subscription
			   ,@lastInsertedUser)


	IF (@country_id = 1) --Client is from Germany
	BEGIN
		INSERT INTO [WhiskyGermany].[dbo].[Client] (id_client,name_client,email_client,subscription_client)
		VALUES (@lastInsertedUser,@full_name,@email,@id_subscription)
	END

PRINT 0
RETURN 0

EXEC CreateNewUser 
@nickname = 'PRUEBA', 
@password = 'PRUEBA', 
@full_name = 'PRUEBA', 
@country_id = 1, 
@email = 'PRUEBA@GMAIL.COM', 
@id_subscription =1
GO
/****** Object:  StoredProcedure [dbo].[FindUserByNickname]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[FindUserByNickname] 
@nickname nvarchar(64)
AS
DECLARE @result int,
@IdCredentials int
SET @IdCredentials = (SELECT id_user FROM [WhiskyClubCentral].[dbo].[Users] WHERE nickname = @nickname)
SET @result = (SELECT id_client FROM [WhiskyClubCentral].[dbo].[Client] WHERE user_credentials = @IdCredentials)
RETURN @result
GO
/****** Object:  StoredProcedure [dbo].[generatePurchase]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[generatePurchase]
@jsonProducts_ VARCHAR (MAX),
@idStore_ INT,
@idClient_ INT
AS
BEGIN
	SET NOCOUNT ON; 
DECLARE	
	@error INT,
	--CYCLE
	@cursorProducts INT,
	--PRODUCT INFO
	@idProduct_ INT,
	@amountProduct_ INT,
	@priceProduct_ MONEY,
	@subtotal_ MONEY,
	--DATA OF CLIENTE
	@location_client GEOGRAPHY,
	@sub_client INT,
	@sub_discount INT,
	@shipping_discount FLOAT,
	@distance_client FLOAT,
	@country_client INT,
	@money_client VARCHAR(128),
	@moneyEquivalence_cliente FLOAT,
	--DATA OF STORE
	@location_store GEOGRAPHY,
	--DATA OF SHIPPING
	@shippingPrice MONEY,
	--DATA OF PURCHASE
	@lastPurchase_id INT


DECLARE @products TABLE
	(idCursor INT IDENTITY(1,1) PRIMARY KEY, 
	 idProduct INT,
	 quantity INT
	)
DECLARE @results TABLE
	(idCursor INT  PRIMARY KEY, 
	 purchase_id INT,
	 client_name VARCHAR(128),
	 store_name VARCHAR(128),
	 product_name VARCHAR(128),
	 product_priceInd MONEY,
	 product_amount INT,
	 product_subtotal MONEY,
	 purchase_total MONEY,
	 purchase_shipping MONEY,
	 client_sub VARCHAR(128),
	 product_success VARCHAR(128),
	 moneyType VARCHAR(128)
	)

DECLARE @errorTable TABLE
	(idCursor INT IDENTITY(1,1) PRIMARY KEY, 
	 id_Product INT,
	 amount_product INT
	)
	SET @error = 0

	--NULL DATA?
	IF (@jsonProducts_ IS NULL OR @idClient_ IS NULL OR @idStore_ IS NULL) 
		BEGIN
			SET @error = 1
			RETURN @error
		END

	--JSON FORMAT?
	IF ISJSON(@jsonProducts_) < 1
		BEGIN
			 SET @error = 5
			RETURN @error
		END

	--TABLE WITH PRODUCTS
	INSERT INTO @products SELECT * FROM OPENJSON(@jsonProducts_)
							WITH (idProduct INT,
								 quantity INT)

	--DATA OF CLIENT
	SELECT @location_client = [location_client],
			@sub_client = [subscription_client],
			@money_client = [money_type],
		    @moneyEquivalence_cliente = [dollar_equivalent]
			FROM [dbo].[Client] 
			INNER JOIN [dbo].[CatalogCountry] ON [country_client] = [id_Country]
			WHERE [id_client] = @idClient_


	SELECT @sub_client = [subscription_client] FROM [dbo].[Client] WHERE [id_client] = @idClient_
	--DATA OF STORE
	SELECT @location_store = [location_store] FROM [dbo].[Store] WHERE [id_store] = @idStore_
	--DATA OF PRICE
	SELECT @sub_discount = [discount_subscription], 
		   @shipping_discount = ([discount_shipping]/100) FROM [dbo].[CatalogSubscription] WHERE [id_subscription] = @sub_client

	--SHIPPING PRICE 
	SET @distance_client = @location_store.STDistance (@location_client) 
	IF (@distance_client > 1000)
		BEGIN
			SET @distance_client = @distance_client/1000 --KM
		END
	ELSE
		BEGIN
			SET @distance_client = 0
		END
	--PRICE
	SET @shippingPrice = 15 + (@distance_client/2) 
	--DISCOUNT
	SET @shippingPrice = @shippingPrice - (@shippingPrice * @shipping_discount)
	--CONVER TO MONEYTYPE
	SET @shippingPrice = @shippingPrice * @moneyEquivalence_cliente
	--RECALCULATE
	SET @distance_client = @location_store.STDistance (@location_client) /1000

	--GENERATE PURCHAESE
	INSERT INTO [dbo].[purchase]
			   ([client_purchase]
			   ,[date_purchase]
			   ,[location_client]
			   ,[subtotal]
			   ,[shipping]
			   ,[total]
			   ,[distance]
			   ,[moneyType]
			   ,[store])
		 VALUES
			   (@idClient_
			   ,GETDATE()
			   ,@location_client
			   ,0
			   ,@shippingPrice
			   ,@shippingPrice
			   ,@distance_client
			   ,@money_client
			   ,@idStore_)

	--LAST INSERTED ID
	SELECT @lastPurchase_id = MAX([id_purchase]) FROM [dbo].[purchase]

	--GERMANY------------------------------------------------------------------------------------------------
	IF (@idStore_ = 1 OR @idStore_ = 2 OR @idStore_ = 3)
		BEGIN
			--GENERATE PURCHASE LOCAL GERMNANY
			INSERT INTO [WhiskyGermany].[dbo].[purchase] SELECT * FROM [WhiskyClubCentral].[dbo].[purchase] WHERE [id_purchase] = @lastPurchase_id

			--INIT CYCLE FOR PRODUCTS
			SELECT @cursorProducts = MIN(idCursor) FROM @products
			WHILE @cursorProducts IS NOT NULL
			BEGIN
				--INFO
				SELECT @amountProduct_ = quantity,
					   @idProduct_ = idProduct 
					   FROM @products WHERE @cursorProducts = idCursor

				--VERIFY QUANTITY
				IF (SELECT [aumount] FROM [WhiskyGermany].[dbo].[ProductxStore] WHERE [id_product] = @idProduct_ AND [id_store] = @idStore_) >= @amountProduct_
					BEGIN
						--PRICE OF PRODUCT
						SELECT @priceProduct_ = [price_product] FROM [WhiskyClubCentral].[dbo].[Product] WHERE [id_product] = @idProduct_
						--SUBTOTAL
						SET @subtotal_ = (@priceProduct_ * @amountProduct_) * @moneyEquivalence_cliente

						--GENERATE LINE OF FACT
						INSERT INTO [WhiskyClubCentral].[dbo].[purchaseXProduct]
								   ([id_purchase]
								   ,[id_product]
								   ,[amount]
								   ,[subtotal])
							 VALUES
								   (@lastPurchase_id
								   ,@idProduct_
								   ,@amountProduct_
								   ,@subtotal_)
								   
						--ADD TO RESULT 
						INSERT INTO @results VALUES
								(@cursorProducts, 
								 @lastPurchase_id,
								 (SELECT [name_client] FROM [WhiskyClubCentral].[dbo].[Client] WHERE [id_client] = @idClient_),
								 (SELECT [name_store] FROM [WhiskyClubCentral].[dbo].[Store] WHERE [id_store] = @idStore_),
								 (SELECT [name_product] FROM [WhiskyClubCentral].[dbo].[Product] WHERE [id_product] = @idProduct_),
								 @priceProduct_,
								 @amountProduct_,
								 @subtotal_,
								 0,
								 @shippingPrice,
								 (SELECT [name_subscription] FROM [WhiskyClubCentral].[dbo].[CatalogSubscription] WHERE [id_subscription] = @sub_client),
								 'Processed',
								 @money_client
								)

						--INSERT LOCAL
						INSERT INTO [WhiskyGermany].[dbo].[purchaseXProduct]
								   ([id_purchaseXProduct]
								   ,[id_purchase]
								   ,[id_product]
								   ,[amount]
								   ,[subtotal])
							 VALUES
								   ((SELECT MAX([id_purchaseXProduct]) FROM [WhiskyClubCentral].[dbo].[purchaseXProduct])
								   ,@lastPurchase_id
								   ,@idProduct_
								   ,@amountProduct_
								   ,@subtotal_)

						--DECREMENT AMOUNT X STORE
						UPDATE [WhiskyGermany].[dbo].[ProductxStore]
						   SET [aumount] = [aumount] - @amountProduct_
						 WHERE [id_store] = @idStore_ AND [id_product] = @idProduct_

						--DECREMENT AMOUNT GENERAL
						UPDATE [WhiskyClubCentral].[dbo].[Product]
						   SET [amount] = [amount] - @amountProduct_
						 WHERE [id_product] = @idProduct_


						 --ACT SUBTOTAL AND TOTAL
						UPDATE [WhiskyClubCentral].[dbo].[purchase]
							SET 
								 [subtotal] = [subtotal] + @subtotal_
								,[total] = [total] + @subtotal_
							WHERE [id_purchase] = @lastPurchase_id
						--CENTRAL
						UPDATE [WhiskyGermany].[dbo].[purchase]
							SET 
								 [subtotal] = [subtotal] + @subtotal_
								,[total] = [total] + @subtotal_
							WHERE [id_purchase] = @lastPurchase_id



					END
				ELSE --NO EXIST AMOUNT OF PRODUCT
					BEGIN
						--INSERT INTO ERRORS TABLE
						INSERT INTO @errorTable VALUES (@idProduct_, @amountProduct_)

						--ADD TO RESULT 
						INSERT INTO @results VALUES
								(@cursorProducts, 
								 @lastPurchase_id,
								 (SELECT [name_client] FROM [WhiskyClubCentral].[dbo].[Client] WHERE [id_client] = @idClient_),
								 (SELECT [name_store] FROM [WhiskyClubCentral].[dbo].[Store] WHERE [id_store] = @idStore_),
								 (SELECT [name_product] FROM [WhiskyClubCentral].[dbo].[Product] WHERE [id_product] = @idProduct_),
								 (SELECT [price_product]*@moneyEquivalence_cliente FROM [WhiskyClubCentral].[dbo].[Product] WHERE [id_product] = @idProduct_),
								 @amountProduct_,
								 0,
								 0,
								 @shippingPrice,
								 (SELECT [name_subscription] FROM [WhiskyClubCentral].[dbo].[CatalogSubscription] WHERE [id_subscription] = @sub_client),
								 'canceled',
								 @money_client
								)
					END


				SELECT @cursorProducts = MIN(idCursor) FROM @products WHERE idCursor > @cursorProducts --INDEX ++
			END--END WHILE

			--RETORNAR ERRORES
			UPDATE @results SET purchase_total = (SELECT total FROM [WhiskyClubCentral].[dbo].[purchase] WHERE [id_purchase]=@lastPurchase_id)
			
			--ACT STATUS
			IF (SELECT subtotal FROM [WhiskyClubCentral].[dbo].[purchase] WHERE [id_purchase]=@lastPurchase_id) = 0
				BEGIN
				--central
				UPDATE [WhiskyClubCentral].[dbo].[purchase]
				   SET [status_purchase] = 3
				 WHERE [id_purchase]=@lastPurchase_id
				 --us
				 UPDATE [WhiskyGermany].[dbo].[purchase]
				   SET [status_purchase] = 3
				 WHERE [id_purchase]=@lastPurchase_id
				END

			SELECT * FROM @results
			RETURN 0;

		END--END GERMANY

	--JAPAN--------------------------------------------------------------------------------------------
	IF (@idStore_ = 4 OR @idStore_ = 5 OR @idStore_ = 6)
		BEGIN
			--GENERATE PURCHASE LOCAL GERMNANY
			INSERT INTO [WhiskyJapan].[dbo].[purchase] SELECT * FROM [WhiskyClubCentral].[dbo].[purchase] WHERE [id_purchase] = @lastPurchase_id

			--INIT CYCLE FOR PRODUCTS
			SELECT @cursorProducts = MIN(idCursor) FROM @products
			WHILE @cursorProducts IS NOT NULL
			BEGIN
				--INFO
				SELECT @amountProduct_ = quantity,
					   @idProduct_ = idProduct 
					   FROM @products WHERE @cursorProducts = idCursor

				--VERIFY QUANTITY
				IF (SELECT [aumount] FROM [WhiskyJapan].[dbo].[ProductxStore] WHERE [id_product] = @idProduct_ AND [id_store] = @idStore_) >= @amountProduct_
					BEGIN
						--PRICE OF PRODUCT
						SELECT @priceProduct_ = [price_product] FROM [WhiskyClubCentral].[dbo].[Product] WHERE [id_product] = @idProduct_
						--SUBTOTAL
						SET @subtotal_ = (@priceProduct_ * @amountProduct_) * @moneyEquivalence_cliente

						--GENERATE LINE OF FACT
						INSERT INTO [WhiskyClubCentral].[dbo].[purchaseXProduct]
								   ([id_purchase]
								   ,[id_product]
								   ,[amount]
								   ,[subtotal])
							 VALUES
								   (@lastPurchase_id
								   ,@idProduct_
								   ,@amountProduct_
								   ,@subtotal_)


						--INSERT LOCAL
						INSERT INTO [WhiskyJapan].[dbo].[purchaseXProduct]
								   ([id_purchaseXProduct]
								   ,[id_purchase]
								   ,[id_product]
								   ,[amount]
								   ,[subtotal])
							 VALUES
								   ((SELECT MAX([id_purchaseXProduct]) FROM [WhiskyClubCentral].[dbo].[purchaseXProduct])
								   ,@lastPurchase_id
								   ,@idProduct_
								   ,@amountProduct_
								   ,@subtotal_)
						--ADD TO RESULT 
						INSERT INTO @results VALUES
								(@cursorProducts, 
								 @lastPurchase_id,
								 (SELECT [name_client] FROM [WhiskyClubCentral].[dbo].[Client] WHERE [id_client] = @idClient_),
								 (SELECT [name_store] FROM [WhiskyClubCentral].[dbo].[Store] WHERE [id_store] = @idStore_),
								 (SELECT [name_product] FROM [WhiskyClubCentral].[dbo].[Product] WHERE [id_product] = @idProduct_),
								 @priceProduct_,
								 @amountProduct_,
								 @subtotal_,
								 0,
								 @shippingPrice,
								 (SELECT [name_subscription] FROM [WhiskyClubCentral].[dbo].[CatalogSubscription] WHERE [id_subscription] = @sub_client),
								 'Processed',
								 @money_client
								)

						--DECREMENT AMOUNT
						UPDATE [WhiskyJapan].[dbo].[ProductxStore]
						   SET [aumount] = [aumount] - @amountProduct_
						 WHERE [id_store] = @idStore_ AND [id_product] = @idProduct_

						UPDATE [WhiskyClubCentral].[dbo].[Product]
						   SET [amount] = [amount] - @amountProduct_
						 WHERE [id_product] = @idProduct_

						 --ACT SUBTOTAL AND TOTAL
						UPDATE [WhiskyClubCentral].[dbo].[purchase]
							SET 
								 [subtotal] = [subtotal] + @subtotal_
								,[total] = [total] + @subtotal_
							WHERE [id_purchase] = @lastPurchase_id
						--CENTRAL
						UPDATE [WhiskyJapan].[dbo].[purchase]
							SET 
								 [subtotal] = [subtotal] + @subtotal_
								,[total] = [total] + @subtotal_
							WHERE [id_purchase] = @lastPurchase_id
					END
				ELSE --NO EXIST AMOUNT OF PRODUCT
					BEGIN
						--INSERT INTO ERRORS TABLE
						INSERT INTO @errorTable VALUES (@idProduct_, @amountProduct_)

						--ADD TO RESULT 
						INSERT INTO @results VALUES
								(@cursorProducts, 
								 @lastPurchase_id,
								 (SELECT [name_client] FROM [WhiskyClubCentral].[dbo].[Client] WHERE [id_client] = @idClient_),
								 (SELECT [name_store] FROM [WhiskyClubCentral].[dbo].[Store] WHERE [id_store] = @idStore_),
								 (SELECT [name_product] FROM [WhiskyClubCentral].[dbo].[Product] WHERE [id_product] = @idProduct_),
								 (SELECT [price_product]*@moneyEquivalence_cliente FROM [WhiskyClubCentral].[dbo].[Product] WHERE [id_product] = @idProduct_),
								 @amountProduct_,
								 0,
								 0,
								 @shippingPrice,
								 (SELECT [name_subscription] FROM [WhiskyClubCentral].[dbo].[CatalogSubscription] WHERE [id_subscription] = @sub_client),
								 'canceled',
								 @money_client
								)
					END


				SELECT @cursorProducts = MIN(idCursor) FROM @products WHERE idCursor > @cursorProducts--INDEX ++
			END--END WHILE

			--RETORNAR ERRORES
			UPDATE @results SET purchase_total = (SELECT total FROM [WhiskyClubCentral].[dbo].[purchase] WHERE [id_purchase]=@lastPurchase_id)
			
			--ACT STATUS
			IF (SELECT subtotal FROM [WhiskyClubCentral].[dbo].[purchase] WHERE [id_purchase]=@lastPurchase_id) = 0
				BEGIN
				--central
				UPDATE [WhiskyClubCentral].[dbo].[purchase]
				   SET [status_purchase] = 3
				 WHERE [id_purchase]=@lastPurchase_id
				 --us
				 UPDATE [WhiskyJapan].[dbo].[purchase]
				   SET [status_purchase] = 3
				 WHERE [id_purchase]=@lastPurchase_id
				END
			
			SELECT * FROM @results
			RETURN 0;

		END--END JAPAN

	--US--------------------------------------------------------------------------------------------
	IF (@idStore_ = 7 OR @idStore_ = 8 OR @idStore_ = 9)
		BEGIN
			--GENERATE PURCHASE LOCAL GERMNANY
			INSERT INTO [WhiskyUS].[dbo].[purchase] SELECT * FROM [WhiskyClubCentral].[dbo].[purchase] WHERE [id_purchase] = @lastPurchase_id

			--INIT CYCLE FOR PRODUCTS
			SELECT @cursorProducts = MIN(idCursor) FROM @products
			WHILE @cursorProducts IS NOT NULL
			BEGIN
				--INFO
				SELECT @amountProduct_ = quantity,
					   @idProduct_ = idProduct 
					   FROM @products WHERE @cursorProducts = idCursor

				--VERIFY QUANTITY
				IF (SELECT [aumount] FROM [WhiskyUS].[dbo].[ProductxStore] WHERE [id_product] = @idProduct_ AND [id_store] = @idStore_) >= @amountProduct_
					BEGIN
						--PRICE OF PRODUCT
						SELECT @priceProduct_ = [price_product] FROM [WhiskyClubCentral].[dbo].[Product] WHERE [id_product] = @idProduct_
						--SUBTOTAL
						SET @subtotal_ = (@priceProduct_ * @amountProduct_) * @moneyEquivalence_cliente

						--GENERATE LINE OF FACT
						INSERT INTO [WhiskyClubCentral].[dbo].[purchaseXProduct]
								   ([id_purchase]
								   ,[id_product]
								   ,[amount]
								   ,[subtotal])
							 VALUES
								   (@lastPurchase_id
								   ,@idProduct_
								   ,@amountProduct_
								   ,@subtotal_)


						--INSERT LOCAL
						INSERT INTO [WhiskyUS].[dbo].[purchaseXProduct]
								   ([id_purchaseXProduct]
								   ,[id_purchase]
								   ,[id_product]
								   ,[amount]
								   ,[subtotal])
							 VALUES
								   ((SELECT MAX([id_purchaseXProduct]) FROM [WhiskyClubCentral].[dbo].[purchaseXProduct])
								   ,@lastPurchase_id
								   ,@idProduct_
								   ,@amountProduct_
								   ,@subtotal_)
						--ADD TO RESULT 
						INSERT INTO @results VALUES
								(@cursorProducts, 
								 @lastPurchase_id,
								 (SELECT [name_client] FROM [WhiskyClubCentral].[dbo].[Client] WHERE [id_client] = @idClient_),
								 (SELECT [name_store] FROM [WhiskyClubCentral].[dbo].[Store] WHERE [id_store] = @idStore_),
								 (SELECT [name_product] FROM [WhiskyClubCentral].[dbo].[Product] WHERE [id_product] = @idProduct_),
								 @priceProduct_,
								 @amountProduct_,
								 @subtotal_,
								 0,
								 @shippingPrice,
								 (SELECT [name_subscription] FROM [WhiskyClubCentral].[dbo].[CatalogSubscription] WHERE [id_subscription] = @sub_client),
								 'Processed',
								 @money_client
								)

						--DECREMENT AMOUNT
						UPDATE [WhiskyUS].[dbo].[ProductxStore]
						   SET [aumount] = [aumount] - @amountProduct_
						 WHERE [id_store] = @idStore_ AND [id_product] = @idProduct_

						 --DECREMENT AMOUNT GENERAL
						UPDATE [WhiskyClubCentral].[dbo].[Product]
						   SET [amount] = [amount] - @amountProduct_
						 WHERE [id_product] = @idProduct_

						 --ACT SUBTOTAL AND TOTAL
						UPDATE [WhiskyClubCentral].[dbo].[purchase]
							SET 
								 [subtotal] = [subtotal] + @subtotal_
								,[total] = [total] + @subtotal_
							WHERE [id_purchase] = @lastPurchase_id
						--CENTRAL
						UPDATE [WhiskyUS].[dbo].[purchase]
							SET 
								 [subtotal] = [subtotal] + @subtotal_
								,[total] = [total] + @subtotal_
							WHERE [id_purchase] = @lastPurchase_id
					END
				ELSE --NO EXIST AMOUNT OF PRODUCT
					BEGIN
						--INSERT INTO ERRORS TABLE
						INSERT INTO @errorTable VALUES (@idProduct_, @amountProduct_)

						--ADD TO RESULT 
						INSERT INTO @results VALUES
								(@cursorProducts, 
								 @lastPurchase_id,
								 (SELECT [name_client] FROM [WhiskyClubCentral].[dbo].[Client] WHERE [id_client] = @idClient_),
								 (SELECT [name_store] FROM [WhiskyClubCentral].[dbo].[Store] WHERE [id_store] = @idStore_),
								 (SELECT [name_product] FROM [WhiskyClubCentral].[dbo].[Product] WHERE [id_product] = @idProduct_),
								 (SELECT [price_product]*@moneyEquivalence_cliente FROM [WhiskyClubCentral].[dbo].[Product] WHERE [id_product] = @idProduct_),
								 @amountProduct_,
								 0,
								 0,
								 @shippingPrice,
								 (SELECT [name_subscription] FROM [WhiskyClubCentral].[dbo].[CatalogSubscription] WHERE [id_subscription] = @sub_client),
								 'canceled',
								 @money_client
								)
					END


				SELECT @cursorProducts = MIN(idCursor) FROM @products WHERE idCursor > @cursorProducts
			END--END WHILE

			--RETORNAR ERRORES
			UPDATE @results SET purchase_total = (SELECT total FROM [WhiskyClubCentral].[dbo].[purchase] WHERE [id_purchase]=@lastPurchase_id)
			
			--ACT STATUS
			IF (SELECT subtotal FROM [WhiskyClubCentral].[dbo].[purchase] WHERE [id_purchase]=@lastPurchase_id) = 0
				BEGIN
				--central
				UPDATE [WhiskyClubCentral].[dbo].[purchase]
				   SET [status_purchase] = 3
				 WHERE [id_purchase]=@lastPurchase_id
				 --us
				 UPDATE [WhiskyUS].[dbo].[purchase]
				   SET [status_purchase] = 3
				 WHERE [id_purchase]=@lastPurchase_id
				END


			SELECT * FROM @results
			RETURN 0;

		END--END US

RETURN @error
END
GO
/****** Object:  StoredProcedure [dbo].[getContainerCatalog]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[getContainerCatalog]
AS
BEGIN
	SET NOCOUNT ON; 
DECLARE	
	@error INT

	SELECT [id_Container],
			[description_Container]
	  FROM [dbo].[CatalogContainer]

print @error;
RETURN @error
END
GO
/****** Object:  StoredProcedure [dbo].[getDistilleryCatalog]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[getDistilleryCatalog]
AS
BEGIN
	SET NOCOUNT ON; 
DECLARE	
	@error INT


	  SELECT [id_Distillery],
			[name_Distillery]
	  FROM [dbo].[CatalogDistillery]
	  AS distilleryInfo


print @error;
RETURN @error
END
GO
/****** Object:  StoredProcedure [dbo].[insertLocation]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[insertLocation]
@idClient_ INT,
@latitude FLOAT,
@longitude FLOAT,
@name VARCHAR(128)
AS
BEGIN
	SET NOCOUNT ON; 
DECLARE	
	@error INT,
	@direction GEOGRAPHY

	SET @direction = geography::Point(@latitude, @longitude, 4326)

	IF (SELECT COUNT(*) FROM [dbo].[Client] WHERE [id_client] = @idClient_) = 0
		BEGIN
			print 1;
			RETURN 1; --ERROR
		END

	IF (SELECT COUNT(*) FROM [dbo].[LocationXClient] WHERE [name_location] LIKE @name) > 0
		BEGIN
			print 2;
			RETURN 2; --ERROR
		END
	INSERT INTO [dbo].[LocationXClient]
			   ([id_client]
			   ,[location_client]
			   ,[name_location])
		 VALUES
			   (@idClient_
			   ,@direction
			   ,@name)


RETURN 0
END

exec insertLocation
@idClient_ =1,
@latitude = 52.182017089,
@longitude = 38.320312500,
@name = 'prueba'
GO
/****** Object:  StoredProcedure [dbo].[returnProductTypes]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[returnProductTypes]
AS
BEGIN
	SET NOCOUNT ON; 
DECLARE	
	@error INT

	SELECT [id_ProductType]
		  ,[name_ProductType]
	  FROM [dbo].[CatalogProductType]

print @error;
RETURN @error
END
GO
/****** Object:  StoredProcedure [dbo].[returnPurchase]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[returnPurchase]
AS
BEGIN
	SET NOCOUNT ON; 
DECLARE	
	@error INT

SELECT [id_purchase]
      ,[name_client]
      ,[date_purchase],
	   [email_client]
      ,([purchase].[location_client].STAsText()) AS direction
      ,[subtotal]
      ,[shipping]
      ,[total]
      ,[id_PurchasingManager]
      ,[id_Dealer]
      ,[name_StatusPurchase]
      ,[distance]
      ,[moneyType]
  FROM [dbo].[purchase] 
  INNER JOIN [dbo].[Client] ON  [client_purchase] = [id_client]
  INNER JOIN [dbo].[CatalogStatusPurchase] ON [status_purchase] = [id_StatusPurchase]
  WHERE [id_purchase] = (SELECT MAX([id_purchase]) FROM [dbo].[purchase] )

print @error;
RETURN @error
END
GO
/****** Object:  StoredProcedure [dbo].[returnStores]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[returnStores]
AS
BEGIN
	SET NOCOUNT ON; 
DECLARE	
	@error INT

	SELECT [id_store]
		  ,[name_store]
		  ,[country_store]
		  ,[location_store]
		  ,[location_storeText]
	  FROM [dbo].[Store]

print @error;
RETURN @error
END
GO
/****** Object:  StoredProcedure [dbo].[verifyLogin]    Script Date: 6/16/2022 5:09:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[verifyLogin]
@nickname nvarchar(50), 
@password nvarchar(50)
AS
DECLARE @email varchar(64),
@idClient int,
@idUserType int
    IF @nickname IS NULL or @password IS NULL
    BEGIN
        PRINT 1
        RETURN 1 --'One or more paramters are null'
    END
    ELSE
    IF (SELECT COUNT(*) FROM [WhiskyClubCentral].[dbo].[Users] WHERE nickname = @nickname) <= 0
    BEGIN
        PRINT 2
        RETURN 2 --'No account registered with the sent nickname'
    END
    ELSE
    IF (SELECT pwdcompare(@password, (select [password_user] FROM [WhiskyClubCentral].[dbo].[Users] where nickname=@nickname))) <= 0
    BEGIN
        PRINT 3
        RETURN 3 --'The given password and nickname combination does not exist'
    END
    ELSE
    BEGIN
        EXEC @IdClient = FindUserByNickname @nickname = @nickname
        SET @email = (SELECT email_client FROM [WhiskyClubCentral].[dbo].[Client] WHERE id_client = @idClient)
		SET @idUserType = (SELECT type_user FROM [WhiskyClubCentral].[dbo].[Users] WHERE nickname = @nickname)
        SELECT @idClient as idClient, @email AS emailClient, @idUserType AS userType
        RETURN 0
    END
GO
USE [master]
GO
ALTER DATABASE [WhiskyClubCentral] SET  READ_WRITE 
GO
